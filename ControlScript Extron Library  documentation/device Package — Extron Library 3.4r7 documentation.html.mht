From: <Saved by Blink>
Snapshot-Content-Location: http://127.0.0.1:8080/device.html
Subject: =?utf-8?Q?device=20Package=20=E2=80=94=20Extron=20Library=203.4r7=20docum?=
 =?utf-8?Q?entation?=
Date: Fri, 20 Dec 2019 06:31:32 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--SPQTotQKbT0T2Fv5pnIoZULU8nKu27WtNYGLKXavX7----"


------MultipartBoundary--SPQTotQKbT0T2Fv5pnIoZULU8nKu27WtNYGLKXavX7----
Content-Type: text/html
Content-ID: <frame-88647AA5FE38E0E50219E5073875F95F@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://127.0.0.1:8080/device.html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.=
w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns=3D"http://www.w3.=
org/1999/xhtml"><head><meta http-equiv=3D"Content-Type" content=3D"text/htm=
l; charset=3DUTF-8">
    <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3DEdge">
   =20
    <title>device Package =E2=80=94 Extron Library 3.4r7 documentation</tit=
le>
    <link rel=3D"stylesheet" href=3D"http://127.0.0.1:8080/_static/classic.=
css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://127.0.0.1:8080/_static/pygments=
.css" type=3D"text/css">
   =20
   =20
   =20
   =20
   =20
    <link rel=3D"index" title=3D"Index" href=3D"http://127.0.0.1:8080/genin=
dex.html">
    <link rel=3D"search" title=3D"Search" href=3D"http://127.0.0.1:8080/sea=
rch.html">
    <link rel=3D"next" title=3D"interface Package" href=3D"http://127.0.0.1=
:8080/interface.html">
    <link rel=3D"prev" title=3D"extronlib Package" href=3D"http://127.0.0.1=
:8080/extronlib.html">=20
  </head><body>
    <div class=3D"related" role=3D"navigation" aria-label=3D"related naviga=
tion">
      <h3>Navigation</h3>
      <ul>
        <li class=3D"right" style=3D"margin-right: 10px">
          <a href=3D"http://127.0.0.1:8080/genindex.html" title=3D"General =
Index" accesskey=3D"I">index</a></li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/py-modindex.html" title=3D"Pytho=
n Module Index">modules</a> |</li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/interface.html" title=3D"interfa=
ce Package" accesskey=3D"N">next</a> |</li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/extronlib.html" title=3D"extronl=
ib Package" accesskey=3D"P">previous</a> |</li>
        <li class=3D"nav-item nav-item-0"><a href=3D"http://127.0.0.1:8080/=
index.html">Extron Library</a></li>
		<li><span class=3D"version_switcher_placeholder"><select><option value=3D=
"3.4" selected=3D"selected">3.4r7</option><option value=3D"3.3">3.3</option=
><option value=3D"3.2">3.2</option><option value=3D"3.1">3.1</option><optio=
n value=3D"2.9">2.9</option></select></span></li>
		<li><a href=3D"http://127.0.0.1:8080/device.html#">Documentation</a> =C2=
=BB </li>

          <li class=3D"nav-item nav-item-1"><a href=3D"http://127.0.0.1:808=
0/extronlib.html" accesskey=3D"U">extronlib Package</a> =C2=BB</li>=20
      </ul>
    </div> =20

    <div class=3D"document">
      <div class=3D"documentwrapper">
        <div class=3D"bodywrapper">
          <div class=3D"body" role=3D"main">
           =20
  <div class=3D"section" id=3D"module-extronlib.device">
<span id=3D"device-package"></span><h1>device Package<a class=3D"headerlink=
" href=3D"http://127.0.0.1:8080/device.html#module-extronlib.device" title=
=3D"Permalink to this headline">=C2=B6</a></h1>
<p>This package contains libraries to interact with Extron Control Devices.=
</p>
<div class=3D"section" id=3D"ebusdevice-class">
<h2><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#extronlib.device.eBUSDevice" title=3D"extronlib.device.eBUSDevice"><code=
 class=3D"xref py py-class docutils literal notranslate"><span class=3D"pre=
">eBUSDevice</span></code></a> Class<a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/device.html#ebusdevice-class" title=3D"Permalink to this hea=
dline">=C2=B6</a></h2>
<dl class=3D"class">
<dt id=3D"extronlib.device.eBUSDevice">
<em class=3D"property">class </em><code class=3D"descname">eBUSDevice</code=
><span class=3D"sig-paren">(</span><em>Host</em>, <em>DeviceAlias</em><span=
 class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0=
.1:8080/device.html#extronlib.device.eBUSDevice" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><p>Defines common interface to Extron eBUS panels</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.5.</span></p>
</div>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>Host</strong> (<a class=3D"reference internal" href=3D"http://1=
27.0.0.1:8080/device.html#extronlib.device.ProcessorDevice" title=3D"extron=
lib.device.ProcessorDevice"><code class=3D"xref py py-class docutils litera=
l notranslate"><span class=3D"pre">ProcessorDevice</span></code></a>) =E2=
=80=93 handle to Extron <em>ProcessorDevice</em> to which the
<em>eBUSDevice</em> is connected</li>
<li><strong>DeviceAlias</strong> (<em>string</em>) =E2=80=93 Device Alias o=
f the Extron device</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"c1"># Create Primary Processor</span>
<span class=3D"n">ConfRoom</span> <span class=3D"o">=3D</span> <span class=
=3D"n">ProcessorDevice</span><span class=3D"p">(</span><span class=3D"s1">'=
Main'</span><span class=3D"p">)</span>

<span class=3D"c1"># Create eBUSDevice</span>
<span class=3D"n">ConfRoomPanel</span> <span class=3D"o">=3D</span> <span c=
lass=3D"n">eBUSDevice</span><span class=3D"p">(</span><span class=3D"n">Con=
fRoom</span><span class=3D"p">,</span> <span class=3D"s1">'ConfEBP'</span><=
span class=3D"p">)</span>
</pre></div>
</div>
<dl class=3D"method">
<dt id=3D"extronlib.device.eBUSDevice.Click">
<code class=3D"descname">Click</code><span class=3D"sig-paren">(</span><em>=
count=3D1</em>, <em>interval=3DNone</em><span class=3D"sig-paren">)</span><=
a class=3D"headerlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.=
device.eBUSDevice.Click" title=3D"Permalink to this definition">=C2=B6</a><=
/dt>
<dd><p>Play default buzzer sound on applicable device</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>count</strong> (<em>int</em>) =E2=80=93 number of buzzer sound =
to play</li>
<li><strong>interval</strong> (<em>int</em>) =E2=80=93 time gap in millisec=
ond between consecutive sounds</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">If <em>count</em> is greater than 1, <em>interval</em> mu=
st be provided to
indicate the time gap in ms between consecutive buzzer sounds.</p>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.eBUSDevice.GetMute">
<code class=3D"descname">GetMute</code><span class=3D"sig-paren">(</span><e=
m>name</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.GetMute" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Get the mute state for the given channel</p>
<dl class=3D"docutils">
<dt>The defined channel names are:</dt>
<dd><ul class=3D"first last simple">
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Click=
'</span></code> - button click volume</li>
</ul>
</dd>
</dl>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>name</strong> (<em>string</em>) =E2=80=93 name=
 of channel.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Returns:</th><td cl=
ass=3D"field-body">mute state (<code class=3D"docutils literal notranslate"=
><span class=3D"pre">'On'</span></code> or <code class=3D"docutils literal =
notranslate"><span class=3D"pre">'Off'</span></code>)</td>
</tr>
<tr class=3D"field-odd field"><th class=3D"field-name">Return type:</th><td=
 class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ToggleMute</span><span class=3D"p">,</span> <span class=3D"s1"=
>'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">toggleMute</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">PodiumEBP</span><span cla=
ss=3D"o">.</span><span class=3D"n">GetMute</span><span class=3D"p">(</span>=
<span class=3D"s1">'Click'</span><span class=3D"p">)</span> <span class=3D"=
o">=3D=3D</span> <span class=3D"s1">'On'</span><span class=3D"p">:</span>
        <span class=3D"n">PodiumEBP</span><span class=3D"o">.</span><span c=
lass=3D"n">SetMute</span><span class=3D"p">(</span><span class=3D"s1">'Clic=
k'</span><span class=3D"p">,</span> <span class=3D"s1">'Off'</span><span cl=
ass=3D"p">)</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"n">PodiumEBP</span><span class=3D"o">.</span><span c=
lass=3D"n">SetMute</span><span class=3D"p">(</span><span class=3D"s1">'Clic=
k'</span><span class=3D"p">,</span> <span class=3D"s1">'On'</span><span cla=
ss=3D"p">)</span>
</pre></div>
</div>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.6.</span></p>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.eBUSDevice.SetInactivityTime">
<code class=3D"descname">SetInactivityTime</code><span class=3D"sig-paren">=
(</span><em>times</em><span class=3D"sig-paren">)</span><a class=3D"headerl=
ink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.=
SetInactivityTime" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set the inactivity times of the <a class=3D"reference internal" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice" title=3D=
"extronlib.device.eBUSDevice"><code class=3D"xref py py-class docutils lite=
ral notranslate"><span class=3D"pre">eBUSDevice</span></code></a>.  When ea=
ch time expires,
the <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#extronlib.device.eBUSDevice.InactivityChanged" title=3D"extronlib.device=
.eBUSDevice.InactivityChanged"><code class=3D"xref py py-data docutils lite=
ral notranslate"><span class=3D"pre">InactivityChanged</span></code></a> ev=
ent will be triggered.  All times
are absolute.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>times</strong> (<em>list of ints</em>) =E2=80=
=93 list of times.  Each time in whole seconds</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">PodiumPanel</span> <span class=3D"o">=3D</spa=
n> <span class=3D"n">eBUSDevice</span><span class=3D"p">(</span><span class=
=3D"s1">'Podium Panel'</span><span class=3D"p">)</span>
<span class=3D"n">PodiumPanel</span><span class=3D"o">.</span><span class=
=3D"n">SetInactivityTime</span><span class=3D"p">([</span><span class=3D"mi=
">3000</span><span class=3D"p">,</span> <span class=3D"mi">3600</span><span=
 class=3D"p">])</span>    <span class=3D"c1"># Fifty minutes and One hour</=
span>

<span class=3D"nd">@event</span><span class=3D"p">(</span><span class=3D"n"=
>PodiumPanel</span><span class=3D"p">,</span> <span class=3D"s1">'Inactivit=
yChanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">UnoccupyRoom</span><span cl=
ass=3D"p">(</span><span class=3D"n">Panel</span><span class=3D"p">,</span> =
<span class=3D"n">time</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">time</span> <span class=
=3D"o">=3D=3D</span> <span class=3D"mi">3000</span><span class=3D"p">:</spa=
n>
        <span class=3D"n">ShowWarning</span><span class=3D"p">()</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"n">ShutdownSystem</span><span class=3D"p">()</span>
</pre></div>
</div>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">Applies to EBP models only.</p>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.eBUSDevice.SetMute">
<code class=3D"descname">SetMute</code><span class=3D"sig-paren">(</span><e=
m>name</em>, <em>mute</em><span class=3D"sig-paren">)</span><a class=3D"hea=
derlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDev=
ice.SetMute" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set the mute state for the given channel</p>
<dl class=3D"docutils">
<dt>The defined channel names are:</dt>
<dd><ul class=3D"first last simple">
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Click=
'</span></code> - button click volume</li>
</ul>
</dd>
</dl>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>name</strong> (<em>string</em>) =E2=80=93 name of channel.</li>
<li><strong>mute</strong> (<em>string</em>) =E2=80=93 mute state (<code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">'On'</span></code> =
or <code class=3D"docutils literal notranslate"><span class=3D"pre">'Off'</=
span></code>)</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ToggleMute</span><span class=3D"p">,</span> <span class=3D"s1"=
>'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">toggleMute</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">PodiumEBP</span><span cla=
ss=3D"o">.</span><span class=3D"n">GetMute</span><span class=3D"p">(</span>=
<span class=3D"s1">'Click'</span><span class=3D"p">)</span> <span class=3D"=
o">=3D=3D</span> <span class=3D"s1">'On'</span><span class=3D"p">:</span>
        <span class=3D"n">PodiumEBP</span><span class=3D"o">.</span><span c=
lass=3D"n">SetMute</span><span class=3D"p">(</span><span class=3D"s1">'Clic=
k'</span><span class=3D"p">,</span> <span class=3D"s1">'Off'</span><span cl=
ass=3D"p">)</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"n">PodiumEBP</span><span class=3D"o">.</span><span c=
lass=3D"n">SetMute</span><span class=3D"p">(</span><span class=3D"s1">'Clic=
k'</span><span class=3D"p">,</span> <span class=3D"s1">'On'</span><span cla=
ss=3D"p">)</span>
</pre></div>
</div>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.6.</span></p>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.eBUSDevice.SetSleepTimer">
<code class=3D"descname">SetSleepTimer</code><span class=3D"sig-paren">(</s=
pan><em>state</em>, <em>duration=3DNone</em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/device.html#extron=
lib.device.eBUSDevice.SetSleepTimer" title=3D"Permalink to this definition"=
>=C2=B6</a></dt>
<dd><p>Enable/disable sleep timer. Either <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">'On'</span></code> or <code class=3D"docuti=
ls literal notranslate"><span class=3D"pre">True</span></code> enables slee=
p
timer. <code class=3D"docutils literal notranslate"><span class=3D"pre">'Of=
f'</span></code> or <code class=3D"docutils literal notranslate"><span clas=
s=3D"pre">False</span></code> disables sleep timer.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>state</strong> (<em>bool</em><em>, </em><em>string</em>) =E2=80=
=93 whether to enable the sleep timer</li>
<li><strong>duration</strong> (<em>int</em>) =E2=80=93 time in seconds to s=
leep</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">Initialize</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumPanel</span><span class=3D"o">.</span><span cla=
ss=3D"n">SetSleepTimer</span><span class=3D"p">(</span><span class=3D"s1">'=
On'</span><span class=3D"p">,</span> <span class=3D"mi">60</span><span clas=
s=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.eBUSDevice.Sleep">
<code class=3D"descname">Sleep</code><span class=3D"sig-paren">(</span><spa=
n class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.=
0.1:8080/device.html#extronlib.device.eBUSDevice.Sleep" title=3D"Permalink =
to this definition">=C2=B6</a></dt>
<dd><p>Force the device to sleep immediately</p>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.eBUSDevice.Wake">
<code class=3D"descname">Wake</code><span class=3D"sig-paren">(</span><span=
 class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0=
.1:8080/device.html#extronlib.device.eBUSDevice.Wake" title=3D"Permalink to=
 this definition">=C2=B6</a></dt>
<dd><p>Force the device to wake up immediately</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.DeviceAlias">
<code class=3D"descname">DeviceAlias</code><a class=3D"headerlink" href=3D"=
http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.DeviceAlias" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the device alias of the object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.Host">
<code class=3D"descname">Host</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.Host" title=3D"Perma=
link to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Handle to the Extron <em>ProcessorDevice</em> to which th=
e
<em>eBUSDevice</em> is connected.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body"><a class=3D"reference internal" href=3D"http://127.0=
.0.1:8080/device.html#extronlib.device.ProcessorDevice" title=3D"extronlib.=
device.ProcessorDevice"><code class=3D"xref py py-class docutils literal no=
translate"><span class=3D"pre">ProcessorDevice</span></code></a></td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.ID">
<code class=3D"descname">ID</code><a class=3D"headerlink" href=3D"http://12=
7.0.0.1:8080/device.html#extronlib.device.eBUSDevice.ID" title=3D"Permalink=
 to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">device=E2=80=99s ID (set by DIP switch)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.InactivityChanged">
<code class=3D"descname">InactivityChanged</code><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.Inactiv=
ityChanged" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers at times specified by <a class=3D"reference inte=
rnal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice=
.SetInactivityTime" title=3D"extronlib.device.eBUSDevice.SetInactivityTime"=
><code class=3D"xref py py-meth docutils literal notranslate"><span class=
=3D"pre">SetInactivityTime()</span></code></a>
after state transition of inactivity timer.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.e=
BUSDevice" title=3D"extronlib.device.eBUSDevice"><code class=3D"xref py py-=
class docutils literal notranslate"><span class=3D"pre">eBUSDevice</span></=
code></a>
instance triggering the event and time with a float value of
inactivity time in seconds.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">PodiumPanel</span> <span class=3D"o">=3D</spa=
n> <span class=3D"n">eBUSDevice</span><span class=3D"p">(</span><span class=
=3D"s1">'Podium Panel'</span><span class=3D"p">)</span>
<span class=3D"n">PodiumPanel</span><span class=3D"o">.</span><span class=
=3D"n">SetInactivityTime</span><span class=3D"p">([</span><span class=3D"mi=
">3000</span><span class=3D"p">,</span> <span class=3D"mi">3600</span><span=
 class=3D"p">])</span>    <span class=3D"c1"># Fifty minutes and One hour</=
span>

<span class=3D"nd">@event</span><span class=3D"p">(</span><span class=3D"n"=
>PodiumPanel</span><span class=3D"p">,</span> <span class=3D"s1">'Inactivit=
yChanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">UnoccupyRoom</span><span cl=
ass=3D"p">(</span><span class=3D"n">Panel</span><span class=3D"p">,</span> =
<span class=3D"n">time</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">time</span> <span class=
=3D"o">=3D=3D</span> <span class=3D"mi">3000</span><span class=3D"p">:</spa=
n>
        <span class=3D"n">ShowWarning</span><span class=3D"p">()</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"n">ShutdownSystem</span><span class=3D"p">()</span>
</pre></div>
</div>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">Applies to EBP models only.</p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.InactivityTime">
<code class=3D"descname">InactivityTime</code><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.Inactivit=
yTime" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Seconds since last activity.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<ul class=3D"last simple">
<li>0 =3D Active, Nonzero =3D Time of inactivity.</li>
<li>Applies to EBP models only.</li>
</ul>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.LidChanged">
<code class=3D"descname">LidChanged</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.LidChanged" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the Lid state changes.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.e=
BUSDevice" title=3D"extronlib.device.eBUSDevice"><code class=3D"xref py py-=
class docutils literal notranslate"><span class=3D"pre">eBUSDevice</span></=
code></a>
instance triggering the event and the second is the current lid state
(<code class=3D"docutils literal notranslate"><span class=3D"pre">'Opened'<=
/span></code> or <code class=3D"docutils literal notranslate"><span class=
=3D"pre">'Closed'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.LidState">
<code class=3D"descname">LidState</code><a class=3D"headerlink" href=3D"htt=
p://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.LidState" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current lid state (<code class=3D"docutils literal no=
translate"><span class=3D"pre">'Opened'</span></code> or <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">'Closed'</span></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.ModelName">
<code class=3D"descname">ModelName</code><a class=3D"headerlink" href=3D"ht=
tp://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.ModelName" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Model name of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.Offline">
<code class=3D"descname">Offline</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.Offline" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the device goes offline.</p>
<p>The callback takes two arguments. The first one is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.html#m=
odule-extronlib.device" title=3D"extronlib.device"><code class=3D"xref py p=
y-mod docutils literal notranslate"><span class=3D"pre">extronlib.device</s=
pan></code></a> instance triggering the event and the
second one is a string (<code class=3D"docutils literal notranslate"><span =
class=3D"pre">'Offline'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.Online">
<code class=3D"descname">Online</code><a class=3D"headerlink" href=3D"http:=
//127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.Online" title=3D"P=
ermalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the device comes online.</p>
<p>The callback takes two arguments. The first one is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.html#m=
odule-extronlib.device" title=3D"extronlib.device"><code class=3D"xref py p=
y-mod docutils literal notranslate"><span class=3D"pre">extronlib.device</s=
pan></code></a> instance triggering the event and the
second one is a string (<code class=3D"docutils literal notranslate"><span =
class=3D"pre">'Online'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.PartNumber">
<code class=3D"descname">PartNumber</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.PartNumber" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the part number of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.SleepChanged">
<code class=3D"descname">SleepChanged</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.SleepChanged=
" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when sleep state changes.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.e=
BUSDevice" title=3D"extronlib.device.eBUSDevice"><code class=3D"xref py py-=
class docutils literal notranslate"><span class=3D"pre">eBUSDevice</span></=
code></a>
instance triggering the event and the second one is a string
(<code class=3D"docutils literal notranslate"><span class=3D"pre">'Asleep'<=
/span></code> or <code class=3D"docutils literal notranslate"><span class=
=3D"pre">'Awake'</span></code>).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">PodiumPanel</span><span class=3D"p">,</span> <span class=3D"s1=
">'SleepChanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">HandleSleepChanged</span><s=
pan class=3D"p">(</span><span class=3D"n">Panel</span><span class=3D"p">,</=
span> <span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">print</span><span class=3D"p">(</span><span class=3D"=
s1">'{} Sleep State Changed: {}'</span><span class=3D"o">.</span><span clas=
s=3D"n">format</span><span class=3D"p">(</span><span class=3D"n">Panel</spa=
n><span class=3D"o">.</span><span class=3D"n">DeviceAlias</span><span class=
=3D"p">,</span> <span class=3D"n">state</span><span class=3D"p">))</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.SleepState">
<code class=3D"descname">SleepState</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.SleepState" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current sleep state of the device (<code class=3D"doc=
utils literal notranslate"><span class=3D"pre">'Asleep'</span></code>,
<code class=3D"docutils literal notranslate"><span class=3D"pre">'Awake'</s=
pan></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.SleepTimer">
<code class=3D"descname">SleepTimer</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.SleepTimer" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">sleep timer timeout</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.eBUSDevice.SleepTimerEnabled">
<code class=3D"descname">SleepTimerEnabled</code><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBUSDevice.SleepTi=
merEnabled" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> if sleep timer is enabled</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class=3D"section" id=3D"processordevice-class">
<h2><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#extronlib.device.ProcessorDevice" title=3D"extronlib.device.ProcessorDev=
ice"><code class=3D"xref py py-class docutils literal notranslate"><span cl=
ass=3D"pre">ProcessorDevice</span></code></a> Class<a class=3D"headerlink" =
href=3D"http://127.0.0.1:8080/device.html#processordevice-class" title=3D"P=
ermalink to this headline">=C2=B6</a></h2>
<dl class=3D"class">
<dt id=3D"extronlib.device.ProcessorDevice">
<em class=3D"property">class </em><code class=3D"descname">ProcessorDevice<=
/code><span class=3D"sig-paren">(</span><em>DeviceAlias</em>, <em>PartNumbe=
r=3DNone</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice" tit=
le=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Defines common interface to Extron Control Processors</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>DeviceAlias</strong> (<em>string</em>) =E2=80=93 Device Alias o=
f the Extron device</li>
<li><strong>PartNumber</strong> (<em>string</em>) =E2=80=93 device=E2=80=99=
s part number</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<ul class=3D"last simple">
<li><em>DeviceAlias</em> must be a valid device Device Alias of an
Extron device in the system.</li>
<li>If the part number is provided, the device will trigger a
warning message in the program log if it does not match the
connected device.</li>
</ul>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"c1"># Create Primary Processor</span>
<span class=3D"n">ConfRoom</span> <span class=3D"o">=3D</span> <span class=
=3D"n">ProcessorDevice</span><span class=3D"p">(</span><span class=3D"s1">'=
Main'</span><span class=3D"p">)</span>

<span class=3D"c1"># Create Secondary Processor, Confirm Partnumber</span>
<span class=3D"n">ConfRoom3</span> <span class=3D"o">=3D</span> <span class=
=3D"n">ProcessorDevice</span><span class=3D"p">(</span><span class=3D"s1">'=
profRobertsRm'</span><span class=3D"p">,</span> <span class=3D"s1">'60-1234=
-01'</span><span class=3D"p">)</span>

<span class=3D"c1">#Create Touch Panel</span>
<span class=3D"n">PodiumTLP</span> <span class=3D"o">=3D</span> <span class=
=3D"n">UIDevice</span><span class=3D"p">(</span><span class=3D"s1">'Podium =
TLP'</span><span class=3D"p">)</span>
</pre></div>
</div>
<dl class=3D"method">
<dt id=3D"extronlib.device.ProcessorDevice.SetExecutiveMode">
<code class=3D"descname">SetExecutiveMode</code><span class=3D"sig-paren">(=
</span><em>ExecutiveMode</em><span class=3D"sig-paren">)</span><a class=3D"=
headerlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.Proc=
essorDevice.SetExecutiveMode" title=3D"Permalink to this definition">=C2=B6=
</a></dt>
<dd><p>Sets the desired Executive Mode.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">See product manual for list of available modes.</p>
</div>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>ExecutiveMode</strong> (<em>int</em>) =E2=80=
=93 The mode to set. 0 to <em>n</em>.</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 3.1.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.CurrentLoad">
<code class=3D"descname">CurrentLoad</code><a class=3D"headerlink" href=3D"=
http://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.CurrentL=
oad" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current load of 12V DC power supply in watts</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">float</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">This only applies to <em>ProcessorDevice</em> featuring 1=
2V DC power
supply. It returns <code class=3D"docutils literal notranslate"><span class=
=3D"pre">None</span></code> otherwise.</p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.DeviceAlias">
<code class=3D"descname">DeviceAlias</code><a class=3D"headerlink" href=3D"=
http://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.DeviceAl=
ias" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the device alias of the object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.ExecutiveMode">
<code class=3D"descname">ExecutiveMode</code><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.Exec=
utiveMode" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">The current executive mode number.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 3.1.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.ExecutiveModeChanged">
<code class=3D"descname">ExecutiveModeChanged</code><a class=3D"headerlink"=
 href=3D"http://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice=
.ExecutiveModeChanged" title=3D"Permalink to this definition">=C2=B6</a></d=
t>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when executive mode changes.</p>
<p>The callback takes two arguments. The first is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.html#m=
odule-extronlib.device" title=3D"extronlib.device"><code class=3D"xref py p=
y-mod docutils literal notranslate"><span class=3D"pre">extronlib.device</s=
pan></code></a> instance triggering the event and the
second is the executive mode number.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">proc</span><span class=3D"p">,</span> <span class=3D"s1">'Exec=
utiveModeChanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">HandleExecutiveMode</span><=
span class=3D"p">(</span><span class=3D"n">device</span><span class=3D"p">,=
</span> <span class=3D"n">ExecutiveMode</span><span class=3D"p">):</span>
    <span class=3D"k">print</span><span class=3D"p">(</span><span class=3D"=
s1">'Executive mode changed to {}.'</span><span class=3D"o">.</span><span c=
lass=3D"n">format</span><span class=3D"p">(</span><span class=3D"n">Executi=
veMode</span><span class=3D"p">))</span>
</pre></div>
</div>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 3.1.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.FirmwareVersion">
<code class=3D"descname">FirmwareVersion</code><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.Firm=
wareVersion" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the firmware version of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.Hostname">
<code class=3D"descname">Hostname</code><a class=3D"headerlink" href=3D"htt=
p://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.Hostname" t=
itle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the hostname of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.IPAddress">
<code class=3D"descname">IPAddress</code><a class=3D"headerlink" href=3D"ht=
tp://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.IPAddress"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">IP address of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">For control processors with AV LAN, the LAN address is
returned.</p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.LinkLicenses">
<code class=3D"descname">LinkLicenses</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.LinkLic=
enses" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">List of LinkLicense<sup>=C2=AE</sup> part numbers.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">list of strings</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.6.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.MACAddress">
<code class=3D"descname">MACAddress</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.MACAddres=
s" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">MAC address of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">For control processors with AV LAN, the LAN address is
returned.</p>
</div>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.ModelName">
<code class=3D"descname">ModelName</code><a class=3D"headerlink" href=3D"ht=
tp://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.ModelName"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Model name of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.Offline">
<code class=3D"descname">Offline</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.Offline" tit=
le=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the device goes offline.</p>
<p>The callback takes two arguments. The first one is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.html#m=
odule-extronlib.device" title=3D"extronlib.device"><code class=3D"xref py p=
y-mod docutils literal notranslate"><span class=3D"pre">extronlib.device</s=
pan></code></a> instance triggering the event and the
second one is a string (<code class=3D"docutils literal notranslate"><span =
class=3D"pre">'Offline'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.Online">
<code class=3D"descname">Online</code><a class=3D"headerlink" href=3D"http:=
//127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.Online" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the device comes online.</p>
<p>The callback takes two arguments. The first one is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.html#m=
odule-extronlib.device" title=3D"extronlib.device"><code class=3D"xref py p=
y-mod docutils literal notranslate"><span class=3D"pre">extronlib.device</s=
pan></code></a> instance triggering the event and the
second one is a string (<code class=3D"docutils literal notranslate"><span =
class=3D"pre">'Online'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.PartNumber">
<code class=3D"descname">PartNumber</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.PartNumbe=
r" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the part number of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.SerialNumber">
<code class=3D"descname">SerialNumber</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.SerialN=
umber" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Serial number of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.ProcessorDevice.UserUsage">
<code class=3D"descname">UserUsage</code><a class=3D"headerlink" href=3D"ht=
tp://127.0.0.1:8080/device.html#extronlib.device.ProcessorDevice.UserUsage"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">user data usage of this device in KB <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">(used,</span> <span class=3D"p=
re">total)</span></code>.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">tuple of ints</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

</dd></dl>

</div>
<div class=3D"section" id=3D"uidevice-class">
<h2><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#extronlib.device.UIDevice" title=3D"extronlib.device.UIDevice"><code cla=
ss=3D"xref py py-class docutils literal notranslate"><span class=3D"pre">UI=
Device</span></code></a> Class<a class=3D"headerlink" href=3D"http://127.0.=
0.1:8080/device.html#uidevice-class" title=3D"Permalink to this headline">=
=C2=B6</a></h2>
<dl class=3D"class">
<dt id=3D"extronlib.device.UIDevice">
<em class=3D"property">class </em><code class=3D"descname">UIDevice</code><=
span class=3D"sig-paren">(</span><em>DeviceAlias</em>, <em>PartNumber=3DNon=
e</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"htt=
p://127.0.0.1:8080/device.html#extronlib.device.UIDevice" title=3D"Permalin=
k to this definition">=C2=B6</a></dt>
<dd><p>Entity to communicate with Extron Device featuring user interactive =
input.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>DeviceAlias</strong> (<em>string</em>) =E2=80=93 Device Alias o=
f the Extron device</li>
<li><strong>PartNumber</strong> (<em>string</em>) =E2=80=93 device=E2=80=99=
s part number</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<ul class=3D"last simple">
<li><em>DeviceAlias</em> must be a valid device Device Alias of an
Extron device in the system.</li>
<li>If the part number is provided, the device will trigger a
warning message in the program log if it does not match the
connected device.</li>
</ul>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"c1"># Create Primary Processor</span>
<span class=3D"n">ConfRoom</span> <span class=3D"o">=3D</span> <span class=
=3D"n">ProcessorDevice</span><span class=3D"p">(</span><span class=3D"s1">'=
Main'</span><span class=3D"p">)</span>

<span class=3D"c1"># Create Secondary Processor, Confirm Partnumber</span>
<span class=3D"n">ConfRoom3</span> <span class=3D"o">=3D</span> <span class=
=3D"n">ProcessorDevice</span><span class=3D"p">(</span><span class=3D"s1">'=
profRobertsRm'</span><span class=3D"p">,</span> <span class=3D"s1">'60-1234=
-01'</span><span class=3D"p">)</span>

<span class=3D"c1">#Create Touch Panel</span>
<span class=3D"n">PodiumTLP</span> <span class=3D"o">=3D</span> <span class=
=3D"n">UIDevice</span><span class=3D"p">(</span><span class=3D"s1">'Podium =
TLP'</span><span class=3D"p">)</span>
</pre></div>
</div>
<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.Click">
<code class=3D"descname">Click</code><span class=3D"sig-paren">(</span><em>=
count=3D1</em>, <em>interval=3DNone</em><span class=3D"sig-paren">)</span><=
a class=3D"headerlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.=
device.UIDevice.Click" title=3D"Permalink to this definition">=C2=B6</a></d=
t>
<dd><p>Play default buzzer sound on applicable device</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>count</strong> (<em>int</em>) =E2=80=93 number of buzzer sound =
to play</li>
<li><strong>interval</strong> (<em>float</em>) =E2=80=93 time gap between t=
he starts of consecutive buzzer
sounds</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">If <em>count</em> is greater than 1, <em>interval</em> mu=
st be provided.</p>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.GetHDCPStatus">
<code class=3D"descname">GetHDCPStatus</code><span class=3D"sig-paren">(</s=
pan><em>videoInput</em><span class=3D"sig-paren">)</span><a class=3D"header=
link" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.G=
etHDCPStatus" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Return the current HDCP Status for the given input.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>videoInput</strong> (<em>string</em>) =E2=80=
=93 input (<code class=3D"docutils literal notranslate"><span class=3D"pre"=
>'HDMI'</span></code> or <code class=3D"docutils literal notranslate"><span=
 class=3D"pre">'XTP'</span></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Returns:</th><td cl=
ass=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> or <code class=3D"docutils literal notranslate"=
><span class=3D"pre">False</span></code></td>
</tr>
<tr class=3D"field-odd field"><th class=3D"field-name">Return type:</th><td=
 class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">HDCPStatus</span> <span class=3D"o">=3D</span=
> <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">GetHDCPStatus</span><span class=3D"p">(</span><span class=3D"s1">'XT=
P'</span><span class=3D"p">)</span>
<span class=3D"k">if</span> <span class=3D"ow">not</span> <span class=3D"n"=
>HDCPStatus</span><span class=3D"p">:</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">ShowPopup</span><span class=3D"p">(</span><span class=3D"s1">'No HDC=
P'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.GetInputPresence">
<code class=3D"descname">GetInputPresence</code><span class=3D"sig-paren">(=
</span><em>videoInput</em><span class=3D"sig-paren">)</span><a class=3D"hea=
derlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevic=
e.GetInputPresence" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Return the current input presence status for the given input.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>videoInput</strong> (<em>string</em>) =E2=80=
=93 input (<code class=3D"docutils literal notranslate"><span class=3D"pre"=
>'HDMI'</span></code> or <code class=3D"docutils literal notranslate"><span=
 class=3D"pre">'XTP'</span></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Returns:</th><td cl=
ass=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> or <code class=3D"docutils literal notranslate"=
><span class=3D"pre">False</span></code></td>
</tr>
<tr class=3D"field-odd field"><th class=3D"field-name">Return type:</th><td=
 class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">InputPresence</span> <span class=3D"o">=3D</s=
pan> <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span clas=
s=3D"n">GetInputPresence</span><span class=3D"p">(</span><span class=3D"s1"=
>'XTP'</span><span class=3D"p">)</span>
<span class=3D"k">if</span> <span class=3D"ow">not</span> <span class=3D"n"=
>InputPresence</span><span class=3D"p">:</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">ShowPopup</span><span class=3D"p">(</span><span class=3D"s1">'No XTP=
'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.GetMute">
<code class=3D"descname">GetMute</code><span class=3D"sig-paren">(</span><e=
m>name</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.GetMute" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Get the mute state for the given channel</p>
<dl class=3D"docutils">
<dt>The defined channel names are:</dt>
<dd><ul class=3D"first last simple">
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Maste=
r'</span></code> - the master volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Speak=
er'</span></code> - the built-in speakers</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Line'=
</span></code> - the line out</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Click=
'</span></code> - button click volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Sound=
'</span></code> - sound track playback volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'HDMI'=
</span></code> - HDMI input volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'XTP'<=
/span></code> - XTP input volume</li>
</ul>
</dd>
</dl>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>name</strong> (<em>string</em>) =E2=80=93 name=
 of channel.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Returns:</th><td cl=
ass=3D"field-body">mute state (<code class=3D"docutils literal notranslate"=
><span class=3D"pre">'On'</span></code> or <code class=3D"docutils literal =
notranslate"><span class=3D"pre">'Off'</span></code>)</td>
</tr>
<tr class=3D"field-odd field"><th class=3D"field-name">Return type:</th><td=
 class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ToggleMute</span><span class=3D"p">,</span> <span class=3D"s1"=
>'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">toggleMute</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">PodiumTLP</span><span cla=
ss=3D"o">.</span><span class=3D"n">GetMute</span><span class=3D"p">(</span>=
<span class=3D"s1">'HDMI'</span><span class=3D"p">)</span> <span class=3D"o=
">=3D=3D</span> <span class=3D"s1">'On'</span><span class=3D"p">:</span>
        <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span c=
lass=3D"n">SetMute</span><span class=3D"p">(</span><span class=3D"s1">'HDMI=
'</span><span class=3D"p">,</span> <span class=3D"s1">'Off'</span><span cla=
ss=3D"p">)</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span c=
lass=3D"n">SetMute</span><span class=3D"p">(</span><span class=3D"s1">'HDMI=
'</span><span class=3D"p">,</span> <span class=3D"s1">'On'</span><span clas=
s=3D"p">)</span>
</pre></div>
</div>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.6.</span></p>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.GetVolume">
<code class=3D"descname">GetVolume</code><span class=3D"sig-paren">(</span>=
<em>name</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.GetVolume" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Return current volume level for the given channel</p>
<dl class=3D"docutils">
<dt>The defined channel names are:</dt>
<dd><ul class=3D"first last simple">
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Maste=
r'</span></code> - the master volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Click=
'</span></code> - button click volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Sound=
'</span></code> - sound track playback volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'HDMI'=
</span></code> - HDMI input volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'XTP'<=
/span></code> - XTP input volume</li>
</ul>
</dd>
</dl>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>name</strong> (<em>string</em>) =E2=80=93 name=
 of volume channel.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Returns:</th><td cl=
ass=3D"field-body">volume level</td>
</tr>
<tr class=3D"field-odd field"><th class=3D"field-name">Return type:</th><td=
 class=3D"field-body">int</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">RefreshPage</span><span cla=
ss=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> =
<span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">currentVolume</span> <span class=3D"o">=3D</span> <sp=
an class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=3D"n">=
GetVolume</span><span class=3D"p">(</span><span class=3D"s1">'HDMI'</span><=
span class=3D"p">)</span>
    <span class=3D"o">...</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.HideAllPopups">
<code class=3D"descname">HideAllPopups</code><span class=3D"sig-paren">(</s=
pan><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http:=
//127.0.0.1:8080/device.html#extronlib.device.UIDevice.HideAllPopups" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Dismiss all popup pages</p>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.HidePopup">
<code class=3D"descname">HidePopup</code><span class=3D"sig-paren">(</span>=
<em>popup</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" hre=
f=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.HidePopup"=
 title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Hide popup page</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>popup</strong> (<em>int</em><em>, </em><em>str=
ing</em>) =E2=80=93 popup page number or name</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.HidePopupGroup">
<code class=3D"descname">HidePopupGroup</code><span class=3D"sig-paren">(</=
span><em>group</em><span class=3D"sig-paren">)</span><a class=3D"headerlink=
" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.HideP=
opupGroup" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Hide all popup pages in a popup group</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>group</strong> (<em>int</em>) =E2=80=93 popup =
group number</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">Reset</span><span class=3D"=
p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <span =
class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">HidePopupGroup</span><span class=3D"p">(</span><span class=3D"mi">1<=
/span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.PlaySound">
<code class=3D"descname">PlaySound</code><span class=3D"sig-paren">(</span>=
<em>filename</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" =
href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.PlaySou=
nd" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Play a sound file identified by the <em>filename</em></p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>filename</strong> (<em>string</em>) =E2=80=93 =
name of sound file</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<ul class=3D"last simple">
<li>Only WAV files can be played.</li>
<li>A subsequent call will preempt the currently playing file.</li>
<li>Sound file must be added to the project file.</li>
</ul>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">OccupyRoom</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetLEDBlinking</span><span class=3D"p">(</span><span class=3D"mi">65=
533</span><span class=3D"p">,</span> <span class=3D"s1">'Slow'</span><span =
class=3D"p">,</span> <span class=3D"p">[</span><span class=3D"s1">'Red'</sp=
an><span class=3D"p">,</span> <span class=3D"s1">'Off'</span><span class=3D=
"p">])</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">PlaySound</span><span class=3D"p">(</span><span class=3D"s1">'startu=
p.wav'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetAutoBrightness">
<code class=3D"descname">SetAutoBrightness</code><span class=3D"sig-paren">=
(</span><em>state</em><span class=3D"sig-paren">)</span><a class=3D"headerl=
ink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Se=
tAutoBrightness" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set auto brightness state</p>
<p>Either <code class=3D"docutils literal notranslate"><span class=3D"pre">=
'On'</span></code> or <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">True</span></code> turns on auto brightness. <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">'Off'</span></code> or
<code class=3D"docutils literal notranslate"><span class=3D"pre">False</spa=
n></code> turns off auto brightness.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>state</strong> (<em>bool</em><em>, </em><em>st=
ring</em>) =E2=80=93 whether to enable auto brightness</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">Initialize</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetAutoBrightness</span><span class=3D"p">(</span><span class=3D"s1"=
>'On'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetBrightness">
<code class=3D"descname">SetBrightness</code><span class=3D"sig-paren">(</s=
pan><em>level</em><span class=3D"sig-paren">)</span><a class=3D"headerlink"=
 href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.SetBri=
ghtness" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set LCD screen brightness level</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>level</strong> (<em>int</em>) =E2=80=93 bright=
ness level from 0 ~ 100</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">Initialize</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetAutoBrightness</span><span class=3D"p">(</span><span class=3D"s1"=
>'Off'</span><span class=3D"p">)</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetBrightness</span><span class=3D"p">(</span><span class=3D"mi">50<=
/span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetDisplayTimer">
<code class=3D"descname">SetDisplayTimer</code><span class=3D"sig-paren">(<=
/span><em>state</em>, <em>timeout</em><span class=3D"sig-paren">)</span><a =
class=3D"headerlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.de=
vice.UIDevice.SetDisplayTimer" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Enable/disable display timer</p>
<p>Either <code class=3D"docutils literal notranslate"><span class=3D"pre">=
'On'</span></code> or <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">True</span></code> enables display timer. <code class=3D"docuti=
ls literal notranslate"><span class=3D"pre">'Off'</span></code> or
<code class=3D"docutils literal notranslate"><span class=3D"pre">False</spa=
n></code> disables display timer.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>state</strong> (<em>bool</em><em>, </em><em>string</em>) =E2=80=
=93 whether to enable the display timer</li>
<li><strong>timeout</strong> (<em>int</em>) =E2=80=93 time in seconds befor=
e turn off the display</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">Display timer is applicable to TLI only.</p>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">Initialize</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetDisplayTimer</span><span class=3D"p">(</span><span class=3D"bp">T=
rue</span><span class=3D"p">,</span> <span class=3D"mi">180</span><span cla=
ss=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetInactivityTime">
<code class=3D"descname">SetInactivityTime</code><span class=3D"sig-paren">=
(</span><em>times</em><span class=3D"sig-paren">)</span><a class=3D"headerl=
ink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Se=
tInactivityTime" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set the inactivity times of the <a class=3D"reference internal" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice" title=3D"e=
xtronlib.device.UIDevice"><code class=3D"xref py py-class docutils literal =
notranslate"><span class=3D"pre">UIDevice</span></code></a>.  When each tim=
e expires,
the <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#extronlib.device.UIDevice.InactivityChanged" title=3D"extronlib.device.U=
IDevice.InactivityChanged"><code class=3D"xref py py-data docutils literal =
notranslate"><span class=3D"pre">InactivityChanged</span></code></a> event =
will be triggered.  All times
are absolute.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>times</strong> (<em>list of ints</em>) =E2=80=
=93 list of times.  Each time in whole seconds</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">PodiumTLP</span> <span class=3D"o">=3D</span>=
 <span class=3D"n">UIDevice</span><span class=3D"p">(</span><span class=3D"=
s1">'Podium TLP'</span><span class=3D"p">)</span>
<span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=3D"=
n">SetInactivityTime</span><span class=3D"p">([</span><span class=3D"mi">30=
00</span><span class=3D"p">,</span> <span class=3D"mi">3600</span><span cla=
ss=3D"p">])</span>    <span class=3D"c1"># Fifty minutes and One hour</span=
>

<span class=3D"nd">@event</span><span class=3D"p">(</span><span class=3D"n"=
>PodiumTLP</span><span class=3D"p">,</span> <span class=3D"s1">'InactivityC=
hanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">UnoccupyRoom</span><span cl=
ass=3D"p">(</span><span class=3D"n">tlp</span><span class=3D"p">,</span> <s=
pan class=3D"n">time</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">time</span> <span class=
=3D"o">=3D=3D</span> <span class=3D"mi">3000</span><span class=3D"p">:</spa=
n>
        <span class=3D"n">ShowWarning</span><span class=3D"p">()</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"n">ShutdownSystem</span><span class=3D"p">()</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetInput">
<code class=3D"descname">SetInput</code><span class=3D"sig-paren">(</span><=
em>videoInput</em><span class=3D"sig-paren">)</span><a class=3D"headerlink"=
 href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.SetInp=
ut" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Sets the input.  Inputs must be published for each device.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>videoInput</strong> (<em>string</em>) =E2=80=
=93 input to select (<code class=3D"docutils literal notranslate"><span cla=
ss=3D"pre">'HDMI'</span></code> or <code class=3D"docutils literal notransl=
ate"><span class=3D"pre">'XTP'</span></code>)</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><sp=
an class=3D"n">SetInput</span><span class=3D"p">(</span><span class=3D"s1">=
'HDMI'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetLEDBlinking">
<code class=3D"descname">SetLEDBlinking</code><span class=3D"sig-paren">(</=
span><em>ledId</em>, <em>rate</em>, <em>stateList</em><span class=3D"sig-pa=
ren">)</span><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/device.h=
tml#extronlib.device.UIDevice.SetLEDBlinking" title=3D"Permalink to this de=
finition">=C2=B6</a></dt>
<dd><p>Make the LED cycle, at ADA compliant rates, through each of the stat=
es
provided.</p>
<table border=3D"1" class=3D"colwidths-given docutils">
<colgroup>
<col width=3D"50%">
<col width=3D"50%">
</colgroup>
<tbody valign=3D"top">
<tr class=3D"row-odd"><td><strong>Rate</strong></td>
<td><strong>Frequency</strong></td>
</tr>
<tr class=3D"row-even"><td>Slow</td>
<td>0.5 Hz</td>
</tr>
<tr class=3D"row-odd"><td>Medium</td>
<td>1 Hz</td>
</tr>
<tr class=3D"row-even"><td>Fast</td>
<td>2 Hz</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">Using this function will blink in unison with other LEDs.=
</p>
</div>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>ledId</strong> (<em>int</em>) =E2=80=93 LED id</li>
<li><strong>rate</strong> (<em>string</em>) =E2=80=93 ADA compliant blink r=
ate. (<code class=3D"docutils literal notranslate"><span class=3D"pre">'Slo=
w'</span></code>, <code class=3D"docutils literal notranslate"><span class=
=3D"pre">'Medium'</span></code>,
<code class=3D"docutils literal notranslate"><span class=3D"pre">'Fast'</sp=
an></code>)</li>
<li><strong>stateList</strong> (<em>list of strings</em>) =E2=80=93 List of=
 colors</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">Available colors are <code class=3D"docutils literal notr=
anslate"><span class=3D"pre">Red</span></code>, <code class=3D"docutils lit=
eral notranslate"><span class=3D"pre">Green</span></code>, and <code class=
=3D"docutils literal notranslate"><span class=3D"pre">Off</span></code>.</p=
>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">PodiumTLP</span> <span class=3D"o">=3D</span>=
 <span class=3D"n">UIDevice</span><span class=3D"p">(</span><span class=3D"=
s1">'Podium TLP'</span><span class=3D"p">)</span>

<span class=3D"nd">@event</span><span class=3D"p">(</span><span class=3D"n"=
>ButtonObject</span><span class=3D"p">,</span> <span class=3D"s1">'Pressed'=
</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">UnoccupyRoom</span><span cl=
ass=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span>=
 <span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetLEDBlinking</span><span class=3D"p">(</span><span class=3D"mi">65=
533</span><span class=3D"p">,</span> <span class=3D"s1">'Slow'</span><span =
class=3D"p">,</span> <span class=3D"p">[</span><span class=3D"s1">'Off'</sp=
an><span class=3D"p">,</span> <span class=3D"s1">'Red'</span><span class=3D=
"p">])</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetLEDState">
<code class=3D"descname">SetLEDState</code><span class=3D"sig-paren">(</spa=
n><em>ledId</em>, <em>state</em><span class=3D"sig-paren">)</span><a class=
=3D"headerlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.=
UIDevice.SetLEDState" title=3D"Permalink to this definition">=C2=B6</a></dt=
>
<dd><p>Drive the LED to the given color</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>ledId</strong> (<em>int</em>) =E2=80=93 LED id</li>
<li><strong>state</strong> (<em>string</em>) =E2=80=93 LED color or =E2=80=
=98Off=E2=80=99.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">Available colors are <code class=3D"docutils literal notr=
anslate"><span class=3D"pre">Red</span></code>, <code class=3D"docutils lit=
eral notranslate"><span class=3D"pre">Green</span></code>, and <code class=
=3D"docutils literal notranslate"><span class=3D"pre">Off</span></code>.</p=
>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">SomeOtherButton</span><span class=3D"p">,</span> <span class=
=3D"s1">'Released'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">UnoccupyRoom</span><span cl=
ass=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span>=
 <span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetLEDState</span><span class=3D"p">(</span><span class=3D"mi">65533=
</span><span class=3D"p">,</span> <span class=3D"s1">'Off'</span><span clas=
s=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetMotionDecayTime">
<code class=3D"descname">SetMotionDecayTime</code><span class=3D"sig-paren"=
>(</span><em>duration</em><span class=3D"sig-paren">)</span><a class=3D"hea=
derlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevic=
e.SetMotionDecayTime" title=3D"Permalink to this definition">=C2=B6</a></dt=
>
<dd><p>Set the period of time to trigger <a class=3D"reference internal" hr=
ef=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.MotionDet=
ected" title=3D"extronlib.device.UIDevice.MotionDetected"><code class=3D"xr=
ef py py-data docutils literal notranslate"><span class=3D"pre">MotionDetec=
ted</span></code></a> after last
motion was detected.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>duration</strong> (<em>float</em>) =E2=80=93 t=
ime in seconds (minimum/default value is 10)</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">Initialize</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetMotionDecayTime</span><span class=3D"p">(</span><span class=3D"mi=
">30</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetMute">
<code class=3D"descname">SetMute</code><span class=3D"sig-paren">(</span><e=
m>name</em>, <em>mute</em><span class=3D"sig-paren">)</span><a class=3D"hea=
derlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevic=
e.SetMute" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set the mute state for the given channel</p>
<dl class=3D"docutils">
<dt>The defined channel names are:</dt>
<dd><ul class=3D"first last simple">
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Maste=
r'</span></code> - the master volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Speak=
er'</span></code> - the built-in speakers</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Line'=
</span></code> - the line out</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Click=
'</span></code> - button click volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Sound=
'</span></code> - sound track playback volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'HDMI'=
</span></code> - HDMI input volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'XTP'<=
/span></code> - XTP input volume</li>
</ul>
</dd>
</dl>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>name</strong> (<em>string</em>) =E2=80=93 name of channel.</li>
<li><strong>mute</strong> (<em>string</em>) =E2=80=93 mute state (<code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">'On'</span></code> =
or <code class=3D"docutils literal notranslate"><span class=3D"pre">'Off'</=
span></code>)</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ToggleMute</span><span class=3D"p">,</span> <span class=3D"s1"=
>'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">toggleMute</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">PodiumTLP</span><span cla=
ss=3D"o">.</span><span class=3D"n">GetMute</span><span class=3D"p">(</span>=
<span class=3D"s1">'HDMI'</span><span class=3D"p">)</span> <span class=3D"o=
">=3D=3D</span> <span class=3D"s1">'On'</span><span class=3D"p">:</span>
        <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span c=
lass=3D"n">SetMute</span><span class=3D"p">(</span><span class=3D"s1">'HDMI=
'</span><span class=3D"p">,</span> <span class=3D"s1">'Off'</span><span cla=
ss=3D"p">)</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span c=
lass=3D"n">SetMute</span><span class=3D"p">(</span><span class=3D"s1">'HDMI=
'</span><span class=3D"p">,</span> <span class=3D"s1">'On'</span><span clas=
s=3D"p">)</span>
</pre></div>
</div>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.6.</span></p>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetSleepTimer">
<code class=3D"descname">SetSleepTimer</code><span class=3D"sig-paren">(</s=
pan><em>state</em>, <em>duration=3DNone</em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/device.html#extron=
lib.device.UIDevice.SetSleepTimer" title=3D"Permalink to this definition">=
=C2=B6</a></dt>
<dd><p>Enable/disable sleep timer. Either <code class=3D"docutils literal n=
otranslate"><span class=3D"pre">'On'</span></code> or <code class=3D"docuti=
ls literal notranslate"><span class=3D"pre">True</span></code> enables slee=
p
timer. <code class=3D"docutils literal notranslate"><span class=3D"pre">'Of=
f'</span></code> or <code class=3D"docutils literal notranslate"><span clas=
s=3D"pre">False</span></code> disables sleep timer.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>state</strong> (<em>bool</em><em>, </em><em>string</em>) =E2=80=
=93 whether to enable the sleep timer</li>
<li><strong>duration</strong> (<em>int</em>) =E2=80=93 time in seconds to s=
leep</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ButtonObject</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">Initialize</span><span clas=
s=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <=
span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">SetSleepTimer</span><span class=3D"p">(</span><span class=3D"s1">'On=
'</span><span class=3D"p">,</span> <span class=3D"mi">60</span><span class=
=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetVolume">
<code class=3D"descname">SetVolume</code><span class=3D"sig-paren">(</span>=
<em>name</em>, <em>level</em><span class=3D"sig-paren">)</span><a class=3D"=
headerlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDe=
vice.SetVolume" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Adjust volume level for the given channel</p>
<dl class=3D"docutils">
<dt>The defined channel names are:</dt>
<dd><ul class=3D"first last simple">
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Maste=
r'</span></code> - the master volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Click=
'</span></code> - button click volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'Sound=
'</span></code> - sound track playback volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'HDMI'=
</span></code> - HDMI input volume</li>
<li><code class=3D"docutils literal notranslate"><span class=3D"pre">'XTP'<=
/span></code> - XTP input volume</li>
</ul>
</dd>
</dl>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>name</strong> (<em>string</em>) =E2=80=93 name of channel.</li>
<li><strong>level</strong> (<em>int</em>) =E2=80=93 volume level 0 ~ 100</l=
i>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.SetWakeOnMotion">
<code class=3D"descname">SetWakeOnMotion</code><span class=3D"sig-paren">(<=
/span><em>state</em><span class=3D"sig-paren">)</span><a class=3D"headerlin=
k" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.SetW=
akeOnMotion" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Enable/disable wake on motion.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>state</strong> (<em>bool</em><em>, </em><em>st=
ring</em>) =E2=80=93 <code class=3D"docutils literal notranslate"><span cla=
ss=3D"pre">True</span></code> (<code class=3D"docutils literal notranslate"=
><span class=3D"pre">'On'</span></code>) or <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">False</span></code> (=E2=80=98Off=E2=80=
=99) to enable and
disable wake on motion, respectively.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.ShowPage">
<code class=3D"descname">ShowPage</code><span class=3D"sig-paren">(</span><=
em>page</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.ShowPage" t=
itle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Show page on the screen</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>page</strong> (<em>int</em><em>, </em><em>stri=
ng</em>) =E2=80=93 absolute page number or name</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.ShowPopup">
<code class=3D"descname">ShowPopup</code><span class=3D"sig-paren">(</span>=
<em>popup</em>, <em>duration=3D0</em><span class=3D"sig-paren">)</span><a c=
lass=3D"headerlink" href=3D"http://127.0.0.1:8080/device.html#extronlib.dev=
ice.UIDevice.ShowPopup" title=3D"Permalink to this definition">=C2=B6</a></=
dt>
<dd><p>Display pop-up page for a period of time.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>popup</strong> (<em>int</em><em>, </em><em>string</em>) =E2=80=
=93 pop-up page number or name</li>
<li><strong>duration</strong> (<em>float</em>) =E2=80=93 duration (in secon=
ds) the pop-up remains on the
screen. 0 means forever.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">If a pop-up is already showing for a finite period of tim=
e,
calling this method again with the same pop-up will replace the
remaining period with the new period.</p>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.Sleep">
<code class=3D"descname">Sleep</code><span class=3D"sig-paren">(</span><spa=
n class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.=
0.1:8080/device.html#extronlib.device.UIDevice.Sleep" title=3D"Permalink to=
 this definition">=C2=B6</a></dt>
<dd><p>Force the device to sleep immediately</p>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.StopSound">
<code class=3D"descname">StopSound</code><span class=3D"sig-paren">(</span>=
<span class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://12=
7.0.0.1:8080/device.html#extronlib.device.UIDevice.StopSound" title=3D"Perm=
alink to this definition">=C2=B6</a></dt>
<dd><p>Stop playing sound file</p>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.device.UIDevice.Wake">
<code class=3D"descname">Wake</code><span class=3D"sig-paren">(</span><span=
 class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0=
.1:8080/device.html#extronlib.device.UIDevice.Wake" title=3D"Permalink to t=
his definition">=C2=B6</a></dt>
<dd><p>Force the device to wake up immediately</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.AmbientLightValue">
<code class=3D"descname">AmbientLightValue</code><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.AmbientLi=
ghtValue" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">current ambient light value</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.AutoBrightness">
<code class=3D"descname">AutoBrightness</code><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.AutoBrightn=
ess" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">current auto brightness state</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.Brightness">
<code class=3D"descname">Brightness</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Brightness" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">current LCD brightness level</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.BrightnessChanged">
<code class=3D"descname">BrightnessChanged</code><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Brightnes=
sChanged" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when LCD brightness has changed.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.U=
IDevice" title=3D"extronlib.device.UIDevice"><code class=3D"xref py py-clas=
s docutils literal notranslate"><span class=3D"pre">UIDevice</span></code><=
/a>
instance triggering the event and the second one is the current
brightness level as an integer.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">PodiumTLP</span><span class=3D"p">,</span> <span class=3D"s1">=
'BrightnessChanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">HandleBrightnessChanged</sp=
an><span class=3D"p">(</span><span class=3D"n">tlp</span><span class=3D"p">=
,</span> <span class=3D"n">brightness</span><span class=3D"p">):</span>
    <span class=3D"k">print</span><span class=3D"p">(</span><span class=3D"=
s1">'{} Brightness Changed: {}'</span><span class=3D"o">.</span><span class=
=3D"n">format</span><span class=3D"p">(</span><span class=3D"n">tlp</span><=
span class=3D"o">.</span><span class=3D"n">DeviceAlias</span><span class=3D=
"p">,</span> <span class=3D"n">brightness</span><span class=3D"p">))</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.DeviceAlias">
<code class=3D"descname">DeviceAlias</code><a class=3D"headerlink" href=3D"=
http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.DeviceAlias" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the device alias of the object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.DisplayState">
<code class=3D"descname">DisplayState</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.DisplayState" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current display state of the device (<code class=3D"d=
ocutils literal notranslate"><span class=3D"pre">'On'</span></code>, <code =
class=3D"docutils literal notranslate"><span class=3D"pre">'Off'</span></co=
de>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">This property is applicable to TLI only.</p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.DisplayTimer">
<code class=3D"descname">DisplayTimer</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.DisplayTimer" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Return display timer timeout seconds</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.DisplayTimerEnabled">
<code class=3D"descname">DisplayTimerEnabled</code><a class=3D"headerlink" =
href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Display=
TimerEnabled" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">current state of the display timer</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.FirmwareVersion">
<code class=3D"descname">FirmwareVersion</code><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.FirmwareVer=
sion" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the firmware version of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.HDCPStatusChanged">
<code class=3D"descname">HDCPStatusChanged</code><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.HDCPStatu=
sChanged" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when HDCP Status changes.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.U=
IDevice" title=3D"extronlib.device.UIDevice"><code class=3D"xref py py-clas=
s docutils literal notranslate"><span class=3D"pre">UIDevice</span></code><=
/a>
instance triggering the event and state with a tuple: (Input, Status).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">PodiumTLP</span><span class=3D"p">,</span> <span class=3D"s1">=
'HDCPStatusChanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">HandleHDCPStatusChangedChan=
ge</span><span class=3D"p">(</span><span class=3D"n">tlp</span><span class=
=3D"p">,</span> <span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">state</span><span class=
=3D"p">[</span><span class=3D"mi">0</span><span class=3D"p">]</span> <span =
class=3D"o">=3D=3D</span> <span class=3D"s1">'HDMI'</span> <span class=3D"o=
w">and</span> <span class=3D"ow">not</span> <span class=3D"n">state</span><=
span class=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p">]:</s=
pan>
        <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span c=
lass=3D"n">ShowPopup</span><span class=3D"p">(</span><span class=3D"s1">'No=
 HDCP'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.Hostname">
<code class=3D"descname">Hostname</code><a class=3D"headerlink" href=3D"htt=
p://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Hostname" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the hostname of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.IPAddress">
<code class=3D"descname">IPAddress</code><a class=3D"headerlink" href=3D"ht=
tp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.IPAddress" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">IP address of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.InactivityChanged">
<code class=3D"descname">InactivityChanged</code><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Inactivit=
yChanged" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers at times specified by <a class=3D"reference inte=
rnal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.S=
etInactivityTime" title=3D"extronlib.device.UIDevice.SetInactivityTime"><co=
de class=3D"xref py py-meth docutils literal notranslate"><span class=3D"pr=
e">SetInactivityTime()</span></code></a>
after state transition of inactivity timer.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.U=
IDevice" title=3D"extronlib.device.UIDevice"><code class=3D"xref py py-clas=
s docutils literal notranslate"><span class=3D"pre">UIDevice</span></code><=
/a>
instance triggering the event and time with a float value of
inactivity time in seconds.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">PodiumTLP</span> <span class=3D"o">=3D</span>=
 <span class=3D"n">UIDevice</span><span class=3D"p">(</span><span class=3D"=
s1">'Podium TLP'</span><span class=3D"p">)</span>
<span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=3D"=
n">SetInactivityTime</span><span class=3D"p">([</span><span class=3D"mi">30=
00</span><span class=3D"p">,</span> <span class=3D"mi">3600</span><span cla=
ss=3D"p">])</span>    <span class=3D"c1"># Fifty minutes and One hour</span=
>

<span class=3D"nd">@event</span><span class=3D"p">(</span><span class=3D"n"=
>PodiumTLP</span><span class=3D"p">,</span> <span class=3D"s1">'InactivityC=
hanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">UnoccupyRoom</span><span cl=
ass=3D"p">(</span><span class=3D"n">tlp</span><span class=3D"p">,</span> <s=
pan class=3D"n">time</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">time</span> <span class=
=3D"o">=3D=3D</span> <span class=3D"mi">3000</span><span class=3D"p">:</spa=
n>
        <span class=3D"n">ShowWarning</span><span class=3D"p">()</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"n">ShutdownSystem</span><span class=3D"p">()</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.InactivityTime">
<code class=3D"descname">InactivityTime</code><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.InactivityT=
ime" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Seconds since last activity.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">0 =3D Active, Nonzero =3D Time of inactivity.</p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.InputPresenceChanged">
<code class=3D"descname">InputPresenceChanged</code><a class=3D"headerlink"=
 href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.InputP=
resenceChanged" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when Input Presence changes.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.U=
IDevice" title=3D"extronlib.device.UIDevice"><code class=3D"xref py py-clas=
s docutils literal notranslate"><span class=3D"pre">UIDevice</span></code><=
/a>
instance triggering the event and state with a tuple: (Input, Status).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">PodiumTLP</span><span class=3D"p">,</span> <span class=3D"s1">=
'InputPresenceChanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">HandleInputPresenceChanged<=
/span><span class=3D"p">(</span><span class=3D"n">tlp</span><span class=3D"=
p">,</span> <span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">state</span><span class=
=3D"p">[</span><span class=3D"mi">0</span><span class=3D"p">]</span> <span =
class=3D"o">=3D=3D</span> <span class=3D"s1">'HDMI'</span> <span class=3D"o=
w">and</span> <span class=3D"ow">not</span> <span class=3D"n">state</span><=
span class=3D"p">[</span><span class=3D"mi">1</span><span class=3D"p">]:</s=
pan>
        <span class=3D"k">if</span> <span class=3D"n">PodiumTLP</span><span=
 class=3D"o">.</span><span class=3D"n">GetInputPresence</span><span class=
=3D"p">(</span><span class=3D"s1">'XTP'</span><span class=3D"p">):</span>
            <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><sp=
an class=3D"n">SetInput</span><span class=3D"p">(</span><span class=3D"s1">=
'XTP'</span><span class=3D"p">)</span>
        <span class=3D"k">else</span><span class=3D"p">:</span>
            <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><sp=
an class=3D"n">ShowPopup</span><span class=3D"p">(</span><span class=3D"s1"=
>'No Input Available'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.LidChanged">
<code class=3D"descname">LidChanged</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.LidChanged" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the Lid state changes.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.U=
IDevice" title=3D"extronlib.device.UIDevice"><code class=3D"xref py py-clas=
s docutils literal notranslate"><span class=3D"pre">UIDevice</span></code><=
/a>
instance triggering the event and the second is the current lid state
(<code class=3D"docutils literal notranslate"><span class=3D"pre">'Opened'<=
/span></code> or <code class=3D"docutils literal notranslate"><span class=
=3D"pre">'Closed'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.LidState">
<code class=3D"descname">LidState</code><a class=3D"headerlink" href=3D"htt=
p://127.0.0.1:8080/device.html#extronlib.device.UIDevice.LidState" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current lid state (<code class=3D"docutils literal no=
translate"><span class=3D"pre">'Opened'</span></code> or <code class=3D"doc=
utils literal notranslate"><span class=3D"pre">'Closed'</span></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.LightChanged">
<code class=3D"descname">LightChanged</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.LightChanged" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when ambient light changes</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.U=
IDevice" title=3D"extronlib.device.UIDevice"><code class=3D"xref py py-clas=
s docutils literal notranslate"><span class=3D"pre">UIDevice</span></code><=
/a>
instance triggering the event and the second is the ambient light
level in the range of 0 ~ 255.</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.LightDetectedState">
<code class=3D"descname">LightDetectedState</code><a class=3D"headerlink" h=
ref=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.LightDet=
ectedState" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">State of light detection. (<code class=3D"docutils litera=
l notranslate"><span class=3D"pre">'Detected'</span></code>, <code class=3D=
"docutils literal notranslate"><span class=3D"pre">'Not</span> <span class=
=3D"pre">Detected'</span></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.MACAddress">
<code class=3D"descname">MACAddress</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.MACAddress" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">MAC address of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.ModelName">
<code class=3D"descname">ModelName</code><a class=3D"headerlink" href=3D"ht=
tp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.ModelName" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Model name of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.MotionDecayTime">
<code class=3D"descname">MotionDecayTime</code><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.MotionDecay=
Time" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the period of time to trigger <a class=3D"reference inter=
nal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Mo=
tionDetected" title=3D"extronlib.device.UIDevice.MotionDetected"><code clas=
s=3D"xref py py-data docutils literal notranslate"><span class=3D"pre">Moti=
onDetected</span></code></a> event
after last motion was detected. The default (and minimum) value is
10 seconds.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.MotionDetected">
<code class=3D"descname">MotionDetected</code><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.MotionDetec=
ted" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when Motion is detected.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.U=
IDevice" title=3D"extronlib.device.UIDevice"><code class=3D"xref py py-clas=
s docutils literal notranslate"><span class=3D"pre">UIDevice</span></code><=
/a>
instance triggering the event and the second one is a string
(<code class=3D"docutils literal notranslate"><span class=3D"pre">'Motion'<=
/span></code> or <code class=3D"docutils literal notranslate"><span class=
=3D"pre">'No</span> <span class=3D"pre">Motion'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.MotionState">
<code class=3D"descname">MotionState</code><a class=3D"headerlink" href=3D"=
http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.MotionState" ti=
tle=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the state of the Motion sensor (e.g. <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">Motion</span></code>, <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">No</span> <span cl=
ass=3D"pre">Motion</span></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.Offline">
<code class=3D"descname">Offline</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/device.html#extronlib.device.UIDevice.Offline" title=3D"P=
ermalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the device goes offline.</p>
<p>The callback takes two arguments. The first one is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.html#m=
odule-extronlib.device" title=3D"extronlib.device"><code class=3D"xref py p=
y-mod docutils literal notranslate"><span class=3D"pre">extronlib.device</s=
pan></code></a> instance triggering the event and the
second one is a string (<code class=3D"docutils literal notranslate"><span =
class=3D"pre">'Offline'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.Online">
<code class=3D"descname">Online</code><a class=3D"headerlink" href=3D"http:=
//127.0.0.1:8080/device.html#extronlib.device.UIDevice.Online" title=3D"Per=
malink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the device comes online.</p>
<p>The callback takes two arguments. The first one is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.html#m=
odule-extronlib.device" title=3D"extronlib.device"><code class=3D"xref py p=
y-mod docutils literal notranslate"><span class=3D"pre">extronlib.device</s=
pan></code></a> instance triggering the event and the
second one is a string (<code class=3D"docutils literal notranslate"><span =
class=3D"pre">'Online'</span></code>).</p>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.PartNumber">
<code class=3D"descname">PartNumber</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.PartNumber" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the part number of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.SerialNumber">
<code class=3D"descname">SerialNumber</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.SerialNumber" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">Serial number of this device</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.SleepChanged">
<code class=3D"descname">SleepChanged</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.SleepChanged" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when sleep state changes.</p>
<p>The callback takes two arguments. The first one is the <a class=3D"refer=
ence internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.U=
IDevice" title=3D"extronlib.device.UIDevice"><code class=3D"xref py py-clas=
s docutils literal notranslate"><span class=3D"pre">UIDevice</span></code><=
/a>
instance triggering the event and the second one is a string
(<code class=3D"docutils literal notranslate"><span class=3D"pre">'Asleep'<=
/span></code> or <code class=3D"docutils literal notranslate"><span class=
=3D"pre">'Awake'</span></code>).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">PodiumTLP</span><span class=3D"p">,</span> <span class=3D"s1">=
'SleepChanged'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">HandleSleepChanged</span><s=
pan class=3D"p">(</span><span class=3D"n">tlp</span><span class=3D"p">,</sp=
an> <span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">print</span><span class=3D"p">(</span><span class=3D"=
s1">'{} Sleep State Changed: {}'</span><span class=3D"o">.</span><span clas=
s=3D"n">format</span><span class=3D"p">(</span><span class=3D"n">tlp</span>=
<span class=3D"o">.</span><span class=3D"n">DeviceAlias</span><span class=
=3D"p">,</span> <span class=3D"n">state</span><span class=3D"p">))</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.SleepState">
<code class=3D"descname">SleepState</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.SleepState" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current sleep state of the device (<code class=3D"doc=
utils literal notranslate"><span class=3D"pre">'Asleep'</span></code>,
<code class=3D"docutils literal notranslate"><span class=3D"pre">'Awake'</s=
pan></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.SleepTimer">
<code class=3D"descname">SleepTimer</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.SleepTimer" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">sleep timer timeout</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.SleepTimerEnabled">
<code class=3D"descname">SleepTimerEnabled</code><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.SleepTime=
rEnabled" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> if sleep timer is enabled</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.UserUsage">
<code class=3D"descname">UserUsage</code><a class=3D"headerlink" href=3D"ht=
tp://127.0.0.1:8080/device.html#extronlib.device.UIDevice.UserUsage" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">user data usage of this device in KB <code class=3D"docut=
ils literal notranslate"><span class=3D"pre">(used,</span> <span class=3D"p=
re">total)</span></code>.</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">tuple of ints</td>
</tr>
</tbody>
</table>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 2.4.</span></p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.device.UIDevice.WakeOnMotion">
<code class=3D"descname">WakeOnMotion</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/device.html#extronlib.device.UIDevice.WakeOnMotion" =
title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">current wake on motion state</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
</div>


          </div>
        </div>
      </div>
      <div class=3D"sphinxsidebar" role=3D"navigation" aria-label=3D"main n=
avigation">
        <div class=3D"sphinxsidebarwrapper">
  <h3><a href=3D"http://127.0.0.1:8080/index.html">Table Of Contents</a></h=
3>
  <ul>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#">device Package</a><ul>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#ebusdevice-class"><code class=3D"docutils literal notranslate"><span cla=
ss=3D"pre">eBUSDevice</span></code> Class</a></li>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#processordevice-class"><code class=3D"docutils literal notranslate"><spa=
n class=3D"pre">ProcessorDevice</span></code> Class</a></li>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/device.ht=
ml#uidevice-class"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">UIDevice</span></code> Class</a></li>
</ul>
</li>
</ul>

  <h4>Previous topic</h4>
  <p class=3D"topless"><a href=3D"http://127.0.0.1:8080/extronlib.html" tit=
le=3D"previous chapter">extronlib Package</a></p>
  <h4>Next topic</h4>
  <p class=3D"topless"><a href=3D"http://127.0.0.1:8080/interface.html" tit=
le=3D"next chapter">interface Package</a></p>
<div id=3D"searchbox" style=3D"" role=3D"search">
  <h3>Quick search</h3>
    <div class=3D"searchformwrapper">
    <form class=3D"search" action=3D"http://127.0.0.1:8080/search.html" met=
hod=3D"get">
      <input type=3D"text" name=3D"q">
      <input type=3D"submit" value=3D"Go">
     =20
     =20
    </form>
    </div>
</div>

        </div>
      </div>
      <div class=3D"clearer"></div>
    </div>
    <div class=3D"related" role=3D"navigation" aria-label=3D"related naviga=
tion">
      <h3>Navigation</h3>
      <ul>
        <li class=3D"right" style=3D"margin-right: 10px">
          <a href=3D"http://127.0.0.1:8080/genindex.html" title=3D"General =
Index">index</a></li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/py-modindex.html" title=3D"Pytho=
n Module Index">modules</a> |</li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/interface.html" title=3D"interfa=
ce Package">next</a> |</li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/extronlib.html" title=3D"extronl=
ib Package">previous</a> |</li>
        <li class=3D"nav-item nav-item-0"><a href=3D"http://127.0.0.1:8080/=
index.html">Extron Library</a></li>
		<li><span class=3D"version_switcher_placeholder"><select><option value=3D=
"3.4" selected=3D"selected">3.4r7</option><option value=3D"3.3">3.3</option=
><option value=3D"3.2">3.2</option><option value=3D"3.1">3.1</option><optio=
n value=3D"2.9">2.9</option></select></span></li>
		<li><a href=3D"http://127.0.0.1:8080/device.html#">Documentation</a> =C2=
=BB </li>

          <li class=3D"nav-item nav-item-1"><a href=3D"http://127.0.0.1:808=
0/extronlib.html">extronlib Package</a> =C2=BB</li>=20
      </ul>
    </div>
    <div class=3D"footer" role=3D"contentinfo">
        =C2=A9 Copyright 2019, Extron (68-2906-01).
    </div>
  <!-- Code injected by live-server -->


</body></html>
------MultipartBoundary--SPQTotQKbT0T2Fv5pnIoZULU8nKu27WtNYGLKXavX7----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://127.0.0.1:8080/_static/classic.css

@charset "utf-8";

@import url("basic.css");

body { font-family: sans-serif; font-size: 100%; background-color: rgb(17, =
48, 61); color: rgb(0, 0, 0); margin: 0px; padding: 0px; }

div.document { background-color: rgb(28, 78, 99); }

div.documentwrapper { float: left; width: 100%; }

div.bodywrapper { margin: 0px 0px 0px 230px; }

div.body { background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); paddi=
ng: 0px 20px 30px; }

div.footer { color: rgb(255, 255, 255); width: 100%; padding: 9px 0px; text=
-align: center; font-size: 75%; }

div.footer a { color: rgb(255, 255, 255); text-decoration: underline; }

div.related { background-color: rgb(19, 63, 82); line-height: 30px; color: =
rgb(255, 255, 255); }

div.related a { color: rgb(255, 255, 255); }

div.sphinxsidebar { }

div.sphinxsidebar h3 { font-family: "Trebuchet MS", sans-serif; color: rgb(=
255, 255, 255); font-size: 1.4em; font-weight: normal; margin: 0px; padding=
: 0px; }

div.sphinxsidebar h3 a { color: rgb(255, 255, 255); }

div.sphinxsidebar h4 { font-family: "Trebuchet MS", sans-serif; color: rgb(=
255, 255, 255); font-size: 1.3em; font-weight: normal; margin: 5px 0px 0px;=
 padding: 0px; }

div.sphinxsidebar p { color: rgb(255, 255, 255); }

div.sphinxsidebar p.topless { margin: 5px 10px 10px; }

div.sphinxsidebar ul { margin: 10px; padding: 0px; color: rgb(255, 255, 255=
); }

div.sphinxsidebar a { color: rgb(152, 219, 204); }

div.sphinxsidebar input { border: 1px solid rgb(152, 219, 204); font-family=
: sans-serif; font-size: 1em; }

a { color: rgb(53, 95, 124); text-decoration: none; }

a:visited { color: rgb(53, 95, 124); text-decoration: none; }

a:hover { text-decoration: underline; }

div.body h1, div.body h2, div.body h3, div.body h4, div.body h5, div.body h=
6 { font-family: "Trebuchet MS", sans-serif; background-color: rgb(242, 242=
, 242); font-weight: normal; color: rgb(32, 67, 92); border-bottom: 1px sol=
id rgb(204, 204, 204); margin: 20px -20px 10px; padding: 3px 0px 3px 10px; =
}

div.body h1 { margin-top: 0px; font-size: 200%; }

div.body h2 { font-size: 160%; }

div.body h3 { font-size: 140%; }

div.body h4 { font-size: 120%; }

div.body h5 { font-size: 110%; }

div.body h6 { font-size: 100%; }

a.headerlink { color: rgb(198, 15, 15); font-size: 0.8em; padding: 0px 4px;=
 text-decoration: none; }

a.headerlink:hover { background-color: rgb(198, 15, 15); color: white; }

div.body p, div.body dd, div.body li, div.body blockquote { text-align: jus=
tify; line-height: 130%; }

div.admonition p.admonition-title + p { display: inline; }

div.admonition p { margin-bottom: 5px; }

div.admonition pre { margin-bottom: 5px; }

div.admonition ul, div.admonition ol { margin-bottom: 5px; }

div.note { background-color: rgb(238, 238, 238); border: 1px solid rgb(204,=
 204, 204); }

div.seealso { background-color: rgb(255, 255, 204); border: 1px solid rgb(2=
55, 255, 102); }

div.topic { background-color: rgb(238, 238, 238); }

div.warning { background-color: rgb(255, 228, 228); border: 1px solid rgb(2=
55, 102, 102); }

p.admonition-title { display: inline; }

p.admonition-title::after { content: ":"; }

pre { padding: 5px; background-color: rgb(238, 255, 204); color: rgb(51, 51=
, 51); line-height: 120%; border-top: 1px solid rgb(170, 204, 153); border-=
bottom: 1px solid rgb(170, 204, 153); border-image: initial; border-left: n=
one; border-right: none; }

code { background-color: rgb(236, 240, 243); padding: 0px 1px; font-size: 0=
.95em; }

th { background-color: rgb(238, 221, 238); }

.warning code { background: rgb(239, 194, 194); }

.note code { background: rgb(214, 214, 214); }

.viewcode-back { font-family: sans-serif; }

div.viewcode-block:target { background-color: rgb(244, 222, 191); border-to=
p: 1px solid rgb(170, 204, 153); border-bottom: 1px solid rgb(170, 204, 153=
); }

div.code-block-caption { color: rgb(239, 239, 239); background-color: rgb(2=
8, 78, 99); }
------MultipartBoundary--SPQTotQKbT0T2Fv5pnIoZULU8nKu27WtNYGLKXavX7----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://127.0.0.1:8080/_static/basic.css

@charset "utf-8";

div.clearer { clear: both; }

div.related { width: 100%; font-size: 90%; }

div.related h3 { display: none; }

div.related ul { margin: 0px; padding: 0px 0px 0px 10px; list-style: none; =
}

div.related li { display: inline; }

div.related li.right { float: right; margin-right: 5px; }

div.sphinxsidebarwrapper { padding: 10px 5px 0px 10px; }

div.sphinxsidebar { float: left; width: 230px; margin-left: -100%; font-siz=
e: 90%; overflow-wrap: break-word; }

div.sphinxsidebar ul { list-style: none; }

div.sphinxsidebar ul ul, div.sphinxsidebar ul.want-points { margin-left: 20=
px; list-style: square; }

div.sphinxsidebar ul ul { margin-top: 0px; margin-bottom: 0px; }

div.sphinxsidebar form { margin-top: 10px; }

div.sphinxsidebar input { border: 1px solid rgb(152, 219, 204); font-family=
: sans-serif; font-size: 1em; }

div.sphinxsidebar #searchbox input[type=3D"text"] { float: left; width: 80%=
; padding: 0.25em; box-sizing: border-box; }

div.sphinxsidebar #searchbox input[type=3D"submit"] { float: left; width: 2=
0%; border-left: none; padding: 0.25em; box-sizing: border-box; }

img { border: 0px; max-width: 100%; }

ul.search { margin: 10px 0px 0px 20px; padding: 0px; }

ul.search li { padding: 5px 0px 5px 20px; background-image: url("file.png")=
; background-repeat: no-repeat; background-position: 0px 7px; }

ul.search li a { font-weight: bold; }

ul.search li div.context { color: rgb(136, 136, 136); margin: 2px 0px 0px 3=
0px; text-align: left; }

ul.keywordmatches li.goodmatch a { font-weight: bold; }

table.contentstable { width: 90%; margin-left: auto; margin-right: auto; }

table.contentstable p.biglink { line-height: 150%; }

a.biglink { font-size: 1.3em; }

span.linkdescr { font-style: italic; padding-top: 5px; font-size: 90%; }

table.indextable { width: 100%; }

table.indextable td { text-align: left; vertical-align: top; }

table.indextable ul { margin-top: 0px; margin-bottom: 0px; list-style-type:=
 none; }

table.indextable > tbody > tr > td > ul { padding-left: 0em; }

table.indextable tr.pcap { height: 10px; }

table.indextable tr.cap { margin-top: 10px; background-color: rgb(242, 242,=
 242); }

img.toggler { margin-right: 3px; margin-top: 3px; cursor: pointer; }

div.modindex-jumpbox { border-top: 1px solid rgb(221, 221, 221); border-bot=
tom: 1px solid rgb(221, 221, 221); margin: 1em 0px; padding: 0.4em; }

div.genindex-jumpbox { border-top: 1px solid rgb(221, 221, 221); border-bot=
tom: 1px solid rgb(221, 221, 221); margin: 1em 0px; padding: 0.4em; }

table.modindextable td { padding: 2px; border-collapse: collapse; }

div.body { min-width: 450px; max-width: 800px; }

div.body p, div.body dd, div.body li, div.body blockquote { }

a.headerlink { visibility: hidden; }

h1:hover > a.headerlink, h2:hover > a.headerlink, h3:hover > a.headerlink, =
h4:hover > a.headerlink, h5:hover > a.headerlink, h6:hover > a.headerlink, =
dt:hover > a.headerlink, caption:hover > a.headerlink, p.caption:hover > a.=
headerlink, div.code-block-caption:hover > a.headerlink { visibility: visib=
le; }

div.body p.caption { text-align: inherit; }

div.body td { text-align: left; }

.first { margin-top: 0px !important; }

p.rubric { margin-top: 30px; font-weight: bold; }

img.align-left, .figure.align-left, object.align-left { clear: left; float:=
 left; margin-right: 1em; }

img.align-right, .figure.align-right, object.align-right { clear: right; fl=
oat: right; margin-left: 1em; }

img.align-center, .figure.align-center, object.align-center { display: bloc=
k; margin-left: auto; margin-right: auto; }

.align-left { text-align: left; }

.align-center { text-align: center; }

.align-right { text-align: right; }

div.sidebar { margin: 0px 0px 0.5em 1em; border: 1px solid rgb(221, 221, 18=
7); padding: 7px 7px 0px; background-color: rgb(255, 255, 238); width: 40%;=
 float: right; }

p.sidebar-title { font-weight: bold; }

div.topic { border: 1px solid rgb(204, 204, 204); padding: 7px 7px 0px; mar=
gin: 10px 0px; }

p.topic-title { font-size: 1.1em; font-weight: bold; margin-top: 10px; }

div.admonition { margin-top: 10px; margin-bottom: 10px; padding: 7px; }

div.admonition dt { font-weight: bold; }

div.admonition dl { margin-bottom: 0px; }

p.admonition-title { margin: 0px 10px 5px 0px; font-weight: bold; }

div.body p.centered { text-align: center; margin-top: 25px; }

table.docutils { border: 0px; border-collapse: collapse; }

table.align-center { margin-left: auto; margin-right: auto; }

table caption span.caption-number { font-style: italic; }

table caption span.caption-text { }

table.docutils td, table.docutils th { padding: 1px 8px 1px 5px; border-wid=
th: 0px 0px 1px; border-top-style: initial; border-top-color: initial; bord=
er-left-style: initial; border-left-color: initial; border-right-style: ini=
tial; border-right-color: initial; border-bottom-style: solid; border-botto=
m-color: rgb(170, 170, 170); }

table.footnote td, table.footnote th { border: 0px !important; }

th { text-align: left; padding-right: 5px; }

table.citation { border-left: 1px solid gray; margin-left: 1px; }

table.citation td { border-bottom: none; }

div.figure { margin: 0.5em; padding: 0.5em; }

div.figure p.caption { padding: 0.3em; }

div.figure p.caption span.caption-number { font-style: italic; }

div.figure p.caption span.caption-text { }

table.field-list td, table.field-list th { border: 0px !important; }

.field-list ul { margin: 0px; padding-left: 1em; }

.field-list p { margin: 0px; }

.field-name { hyphens: manual; }

ol.arabic { list-style: decimal; }

ol.loweralpha { list-style: lower-alpha; }

ol.upperalpha { list-style: upper-alpha; }

ol.lowerroman { list-style: lower-roman; }

ol.upperroman { list-style: upper-roman; }

dl { margin-bottom: 15px; }

dd p { margin-top: 0px; }

dd ul, dd table { margin-bottom: 10px; }

dd { margin-top: 3px; margin-bottom: 10px; margin-left: 30px; }

dt:target, span.highlighted { background-color: rgb(251, 229, 78); }

rect.highlighted { fill: rgb(251, 229, 78); }

dl.glossary dt { font-weight: bold; font-size: 1.1em; }

.optional { font-size: 1.3em; }

.sig-paren { font-size: larger; }

.versionmodified { font-style: italic; }

.system-message { background-color: rgb(255, 221, 170); padding: 5px; borde=
r: 3px solid red; }

.footnote:target { background-color: rgb(255, 255, 170); }

.line-block { display: block; margin-top: 1em; margin-bottom: 1em; }

.line-block .line-block { margin-top: 0px; margin-bottom: 0px; margin-left:=
 1.5em; }

.guilabel, .menuselection { font-family: sans-serif; }

.accelerator { text-decoration: underline; }

.classifier { font-style: oblique; }

abbr, acronym { border-bottom: 1px dotted; cursor: help; }

pre { overflow: auto hidden; }

span.pre { hyphens: none; }

td.linenos pre { padding: 5px 0px; border: 0px; background-color: transpare=
nt; color: rgb(170, 170, 170); }

table.highlighttable { margin-left: 0.5em; }

table.highlighttable td { padding: 0px 0.5em; }

div.code-block-caption { padding: 2px 5px; font-size: small; }

div.code-block-caption code { background-color: transparent; }

div.code-block-caption + div > div.highlight > pre { margin-top: 0px; }

div.code-block-caption span.caption-number { padding: 0.1em 0.3em; font-sty=
le: italic; }

div.code-block-caption span.caption-text { }

div.literal-block-wrapper { padding: 1em 1em 0px; }

div.literal-block-wrapper div.highlight { margin: 0px; }

code.descname { background-color: transparent; font-weight: bold; font-size=
: 1.2em; }

code.descclassname { background-color: transparent; }

code.xref, a code { background-color: transparent; font-weight: bold; }

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { background-color: tr=
ansparent; }

.viewcode-link { float: right; }

.viewcode-back { float: right; font-family: sans-serif; }

div.viewcode-block:target { margin: -1px -10px; padding: 0px 10px; }

img.math { vertical-align: middle; }

div.body div.math p { text-align: center; }

span.eqno { float: right; }

span.eqno a.headerlink { position: relative; left: 0px; z-index: 1; }

div.math:hover a.headerlink { visibility: visible; }

@media print {
  div.document, div.documentwrapper, div.bodywrapper { width: 100%; margin:=
 0px !important; }
  div.sphinxsidebar, div.related, div.footer, #top-link { display: none; }
}
------MultipartBoundary--SPQTotQKbT0T2Fv5pnIoZULU8nKu27WtNYGLKXavX7----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://127.0.0.1:8080/_static/pygments.css

@charset "utf-8";

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(238, 255, 204); }

.highlight .c { color: rgb(64, 128, 144); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cm { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cp { color: rgb(0, 112, 32); }

.highlight .cpf { color: rgb(64, 128, 144); font-style: italic; }

.highlight .c1 { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cs { color: rgb(64, 128, 144); background-color: rgb(255, 240, =
240); }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(51, 51, 51); }

.highlight .gp { color: rgb(198, 93, 9); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kd { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kn { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kp { color: rgb(0, 112, 32); }

.highlight .kr { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kt { color: rgb(144, 32, 0); }

.highlight .m { color: rgb(32, 128, 80); }

.highlight .s { color: rgb(64, 112, 160); }

.highlight .na { color: rgb(64, 112, 160); }

.highlight .nb { color: rgb(0, 112, 32); }

.highlight .nc { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .no { color: rgb(96, 173, 213); }

.highlight .nd { color: rgb(85, 85, 85); font-weight: bold; }

.highlight .ni { color: rgb(213, 85, 55); font-weight: bold; }

.highlight .ne { color: rgb(0, 112, 32); }

.highlight .nf { color: rgb(6, 40, 126); }

.highlight .nl { color: rgb(0, 32, 112); font-weight: bold; }

.highlight .nn { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .nt { color: rgb(6, 40, 115); font-weight: bold; }

.highlight .nv { color: rgb(187, 96, 213); }

.highlight .ow { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(32, 128, 80); }

.highlight .mf { color: rgb(32, 128, 80); }

.highlight .mh { color: rgb(32, 128, 80); }

.highlight .mi { color: rgb(32, 128, 80); }

.highlight .mo { color: rgb(32, 128, 80); }

.highlight .sa { color: rgb(64, 112, 160); }

.highlight .sb { color: rgb(64, 112, 160); }

.highlight .sc { color: rgb(64, 112, 160); }

.highlight .dl { color: rgb(64, 112, 160); }

.highlight .sd { color: rgb(64, 112, 160); font-style: italic; }

.highlight .s2 { color: rgb(64, 112, 160); }

.highlight .se { color: rgb(64, 112, 160); font-weight: bold; }

.highlight .sh { color: rgb(64, 112, 160); }

.highlight .si { color: rgb(112, 160, 208); font-style: italic; }

.highlight .sx { color: rgb(198, 93, 9); }

.highlight .sr { color: rgb(35, 83, 136); }

.highlight .s1 { color: rgb(64, 112, 160); }

.highlight .ss { color: rgb(81, 121, 24); }

.highlight .bp { color: rgb(0, 112, 32); }

.highlight .fm { color: rgb(6, 40, 126); }

.highlight .vc { color: rgb(187, 96, 213); }

.highlight .vg { color: rgb(187, 96, 213); }

.highlight .vi { color: rgb(187, 96, 213); }

.highlight .vm { color: rgb(187, 96, 213); }

.highlight .il { color: rgb(32, 128, 80); }
------MultipartBoundary--SPQTotQKbT0T2Fv5pnIoZULU8nKu27WtNYGLKXavX7------
