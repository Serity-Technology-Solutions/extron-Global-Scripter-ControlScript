From: <Saved by Blink>
Snapshot-Content-Location: http://127.0.0.1:8080/ui.html
Subject: =?utf-8?Q?ui=20Package=20=E2=80=94=20Extron=20Library=203.4r7=20documenta?=
 =?utf-8?Q?tion?=
Date: Fri, 20 Dec 2019 07:21:53 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--J9ygG76yVD31BsO8Y4nZ6AHzhNV8TkgEH6xV9AKCv0----"


------MultipartBoundary--J9ygG76yVD31BsO8Y4nZ6AHzhNV8TkgEH6xV9AKCv0----
Content-Type: text/html
Content-ID: <frame-88647AA5FE38E0E50219E5073875F95F@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://127.0.0.1:8080/ui.html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.=
w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns=3D"http://www.w3.=
org/1999/xhtml"><head><meta http-equiv=3D"Content-Type" content=3D"text/htm=
l; charset=3DUTF-8">
    <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3DEdge">
   =20
    <title>ui Package =E2=80=94 Extron Library 3.4r7 documentation</title>
    <link rel=3D"stylesheet" href=3D"http://127.0.0.1:8080/_static/classic.=
css" type=3D"text/css">
    <link rel=3D"stylesheet" href=3D"http://127.0.0.1:8080/_static/pygments=
.css" type=3D"text/css">
   =20
   =20
   =20
   =20
   =20
    <link rel=3D"index" title=3D"Index" href=3D"http://127.0.0.1:8080/genin=
dex.html">
    <link rel=3D"search" title=3D"Search" href=3D"http://127.0.0.1:8080/sea=
rch.html">
    <link rel=3D"next" title=3D"Decorators" href=3D"http://127.0.0.1:8080/d=
ecorators.html">
    <link rel=3D"prev" title=3D"system Package" href=3D"http://127.0.0.1:80=
80/system.html">=20
  </head><body>
    <div class=3D"related" role=3D"navigation" aria-label=3D"related naviga=
tion">
      <h3>Navigation</h3>
      <ul>
        <li class=3D"right" style=3D"margin-right: 10px">
          <a href=3D"http://127.0.0.1:8080/genindex.html" title=3D"General =
Index" accesskey=3D"I">index</a></li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/py-modindex.html" title=3D"Pytho=
n Module Index">modules</a> |</li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/decorators.html" title=3D"Decora=
tors" accesskey=3D"N">next</a> |</li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/system.html" title=3D"system Pac=
kage" accesskey=3D"P">previous</a> |</li>
        <li class=3D"nav-item nav-item-0"><a href=3D"http://127.0.0.1:8080/=
index.html">Extron Library</a></li>
		<li><span class=3D"version_switcher_placeholder"><select><option value=3D=
"3.4" selected=3D"selected">3.4r7</option><option value=3D"3.3">3.3</option=
><option value=3D"3.2">3.2</option><option value=3D"3.1">3.1</option><optio=
n value=3D"2.9">2.9</option></select></span></li>
		<li><a href=3D"http://127.0.0.1:8080/ui.html#">Documentation</a> =C2=BB <=
/li>

          <li class=3D"nav-item nav-item-1"><a href=3D"http://127.0.0.1:808=
0/extronlib.html" accesskey=3D"U">extronlib Package</a> =C2=BB</li>=20
      </ul>
    </div> =20

    <div class=3D"document">
      <div class=3D"documentwrapper">
        <div class=3D"bodywrapper">
          <div class=3D"body" role=3D"main">
           =20
  <div class=3D"section" id=3D"module-extronlib.ui">
<span id=3D"ui-package"></span><h1>ui Package<a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/ui.html#module-extronlib.ui" title=3D"Permalink t=
o this headline">=C2=B6</a></h1>
<p>This package defines classes for user interactive controls.</p>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">UI control object=E2=80=99s states are retained and will =
be recovered in
case the endpoints lose connection to the primary control processor.</p>
</div>
<div class=3D"section" id=3D"button-class">
<h2><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Button" title=3D"extronlib.ui.Button"><code class=3D"xref py py=
-class docutils literal notranslate"><span class=3D"pre">Button</span></cod=
e></a> Class<a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#b=
utton-class" title=3D"Permalink to this headline">=C2=B6</a></h2>
<dl class=3D"class">
<dt id=3D"extronlib.ui.Button">
<em class=3D"property">class </em><code class=3D"descname">Button</code><sp=
an class=3D"sig-paren">(</span><em>UIHost</em>, <em>ID</em>, <em>holdTime=
=3DNone</em>, <em>repeatTime=3DNone</em><span class=3D"sig-paren">)</span><=
a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.B=
utton" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Representation of Hard/Soft buttons</p>
<p>A button may trigger several events depending on the configuration;
however, Touch Panels only issue <a class=3D"reference internal" href=3D"ht=
tp://127.0.0.1:8080/ui.html#extronlib.ui.Button.Pressed" title=3D"extronlib=
.ui.Button.Pressed"><code class=3D"xref py py-data docutils literal notrans=
late"><span class=3D"pre">Pressed</span></code></a> and <a class=3D"referen=
ce internal" href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button.Rele=
ased" title=3D"extronlib.ui.Button.Released"><code class=3D"xref py py-data=
 docutils literal notranslate"><span class=3D"pre">Released</span></code></=
a>
messages to the controller. Other events (e.g., <a class=3D"reference inter=
nal" href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button.Held" title=
=3D"extronlib.ui.Button.Held"><code class=3D"xref py py-data docutils liter=
al notranslate"><span class=3D"pre">Held</span></code></a>,
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extro=
nlib.ui.Button.Repeated" title=3D"extronlib.ui.Button.Repeated"><code class=
=3D"xref py py-data docutils literal notranslate"><span class=3D"pre">Repea=
ted</span></code></a>) are timer driven within the Button instance.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>UIHost</strong> (<a class=3D"reference internal" href=3D"http:/=
/127.0.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.dev=
ice"><code class=3D"xref py py-mod docutils literal notranslate"><span clas=
s=3D"pre">extronlib.device</span></code></a>) =E2=80=93 Device object hosti=
ng this UIObject</li>
<li><strong>ID</strong> (<em>int</em><em>,</em><em>string</em>) =E2=80=93 I=
D or Name of the UIObject</li>
<li><strong>holdTime</strong> (<em>float</em>) =E2=80=93 Time for <a class=
=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.=
Button.Held" title=3D"extronlib.ui.Button.Held"><code class=3D"xref py py-d=
ata docutils literal notranslate"><span class=3D"pre">Held</span></code></a=
> event. Held event is
triggered only once if the button is pressed and held beyond this
time. If holdTime is given, it must be a floating point number
specifying period of time in seconds of button being pressed and
held to trigger Held event.</li>
<li><strong>repeatTime</strong> (<em>float</em>) =E2=80=93 Time for <a clas=
s=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui=
.Button.Repeated" title=3D"extronlib.ui.Button.Repeated"><code class=3D"xre=
f py py-data docutils literal notranslate"><span class=3D"pre">Repeated</sp=
an></code></a> event. After <em>holdTime</em>
expires, the Repeated event is triggered for every additional
<em>repeatTime</em> of button being held.  If repeatTime is given, it must
be a floating point number specifying time in seconds of button
being held.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">If button is released before <em>holdTime</em> expires,
a <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#ext=
ronlib.ui.Button.Tapped" title=3D"extronlib.ui.Button.Tapped"><code class=
=3D"xref py py-data docutils literal notranslate"><span class=3D"pre">Tappe=
d</span></code></a> event is triggered instead of a
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extro=
nlib.ui.Button.Released" title=3D"extronlib.ui.Button.Released"><code class=
=3D"xref py py-data docutils literal notranslate"><span class=3D"pre">Relea=
sed</span></code></a> event. If the button is released after
<em>holdTime</em> expires, there will be no <a class=3D"reference internal"=
 href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button.Tapped" title=3D=
"extronlib.ui.Button.Tapped"><code class=3D"xref py py-data docutils litera=
l notranslate"><span class=3D"pre">Tapped</span></code></a> event.</p>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">powerOn</span> <span class=3D"o">=3D</span> <=
span class=3D"n">Button</span><span class=3D"p">(</span><span class=3D"n">P=
odiumTLP</span><span class=3D"p">,</span> <span class=3D"s1">'Power On'</sp=
an><span class=3D"p">)</span>
<span class=3D"n">showSetupPage</span> <span class=3D"o">=3D</span> <span c=
lass=3D"n">Button</span><span class=3D"p">(</span><span class=3D"n">PodiumT=
LP</span><span class=3D"p">,</span> <span class=3D"s1">'Show Setup Page'</s=
pan><span class=3D"p">,</span> <span class=3D"n">holdTime</span><span class=
=3D"o">=3D</span><span class=3D"mi">5</span><span class=3D"p">)</span>
<span class=3D"n">volumeUp</span> <span class=3D"o">=3D</span> <span class=
=3D"n">Button</span><span class=3D"p">(</span><span class=3D"n">PodiumTLP</=
span><span class=3D"p">,</span> <span class=3D"mi">10</span><span class=3D"=
p">,</span> <span class=3D"n">repeatTime</span><span class=3D"o">=3D</span>=
<span class=3D"mf">0.1</span><span class=3D"p">)</span>
<span class=3D"n">volumeDown</span> <span class=3D"o">=3D</span> <span clas=
s=3D"n">Button</span><span class=3D"p">(</span><span class=3D"n">PodiumTLP<=
/span><span class=3D"p">,</span> <span class=3D"mi">11</span><span class=3D=
"p">,</span> <span class=3D"n">repeatTime</span><span class=3D"o">=3D</span=
><span class=3D"mf">0.1</span><span class=3D"p">)</span>
</pre></div>
</div>
<dl class=3D"method">
<dt id=3D"extronlib.ui.Button.CustomBlink">
<code class=3D"descname">CustomBlink</code><span class=3D"sig-paren">(</spa=
n><em>rate</em>, <em>stateList</em><span class=3D"sig-paren">)</span><a cla=
ss=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button=
.CustomBlink" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Make the button cycle through each of the states provided.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>rate</strong> (<em>float</em>) =E2=80=93 duration of time in se=
conds for one visual state to stay
until replaced by the next visual state.</li>
<li><strong>stateList</strong> (<em>list of ints</em>) =E2=80=93 list of vi=
sual states that this button blinks among.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">showSetupPage</span><span class=3D"o">.</span=
><span class=3D"n">CustomBlink</span><span class=3D"p">(</span><span class=
=3D"mi">1</span><span class=3D"p">,</span> <span class=3D"p">[</span><span =
class=3D"mi">0</span><span class=3D"p">,</span> <span class=3D"mi">1</span>=
<span class=3D"p">])</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Button.SetBlinking">
<code class=3D"descname">SetBlinking</code><span class=3D"sig-paren">(</spa=
n><em>rate</em>, <em>stateList</em><span class=3D"sig-paren">)</span><a cla=
ss=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button=
.SetBlinking" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Make the button cycle, at ADA compliant rates, through each of the
states provided.</p>
<table border=3D"1" class=3D"colwidths-given docutils">
<colgroup>
<col width=3D"50%">
<col width=3D"50%">
</colgroup>
<tbody valign=3D"top">
<tr class=3D"row-odd"><td><strong>Rate</strong></td>
<td><strong>Frequency</strong></td>
</tr>
<tr class=3D"row-even"><td>Slow</td>
<td>0.5 Hz</td>
</tr>
<tr class=3D"row-odd"><td>Medium</td>
<td>1 Hz</td>
</tr>
<tr class=3D"row-even"><td>Fast</td>
<td>2 Hz</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<ul class=3D"last simple">
<li>Using this function will blink in unison with other buttons.</li>
<li>Maximum of six states in the <em>stateList</em> for <a class=3D"referen=
ce internal" href=3D"http://127.0.0.1:8080/device.html#extronlib.device.eBU=
SDevice" title=3D"extronlib.device.eBUSDevice"><code class=3D"xref py py-cl=
ass docutils literal notranslate"><span class=3D"pre">eBUSDevice</span></co=
de></a>
buttons.</li>
</ul>
</div>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>rate</strong> (<em>string</em>) =E2=80=93 ADA compliant blink r=
ate. (<code class=3D"docutils literal notranslate"><span class=3D"pre">'Slo=
w'</span></code>, <code class=3D"docutils literal notranslate"><span class=
=3D"pre">'Medium'</span></code>,
<code class=3D"docutils literal notranslate"><span class=3D"pre">'Fast'</sp=
an></code>)</li>
<li><strong>stateList</strong> (<em>list of ints</em>) =E2=80=93 list of vi=
sual states that this button blinks among.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">powerOn</span><span class=3D"o">.</span><span=
 class=3D"n">SetBlinking</span><span class=3D"p">(</span><span class=3D"s1"=
>'Medium'</span><span class=3D"p">,</span> <span class=3D"p">[</span><span =
class=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"mi">4</span>=
<span class=3D"p">])</span>   <span class=3D"c1"># Warming up</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Button.SetEnable">
<code class=3D"descname">SetEnable</code><span class=3D"sig-paren">(</span>=
<em>enable</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button.SetEnable" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Enable or disable a UI control object.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>enable</strong> (<em>bool</em>) =E2=80=93 <cod=
e class=3D"docutils literal notranslate"><span class=3D"pre">True</span></c=
ode> to enable the object or <code class=3D"docutils literal notranslate"><=
span class=3D"pre">False</span></code> to disable
it.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Button.SetState">
<code class=3D"descname">SetState</code><span class=3D"sig-paren">(</span><=
em>State</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button.SetState" title=3D"Pe=
rmalink to this definition">=C2=B6</a></dt>
<dd><p>Set the current visual state</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>State</strong> (<em>int</em>) =E2=80=93 visual=
 state number</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">Setting the current state stops button from blinking, if =
it
is running. (<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/=
ui.html#extronlib.ui.Button.SetBlinking" title=3D"extronlib.ui.Button.SetBl=
inking"><code class=3D"xref py py-meth docutils literal notranslate"><span =
class=3D"pre">SetBlinking()</span></code></a>)</p>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">powerOn</span><span class=3D"o">.</span><span=
 class=3D"n">SetState</span><span class=3D"p">(</span><span class=3D"mi">1<=
/span><span class=3D"p">)</span> <span class=3D"c1"># Powered On</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Button.SetText">
<code class=3D"descname">SetText</code><span class=3D"sig-paren">(</span><e=
m>text</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button.SetText" title=3D"Per=
malink to this definition">=C2=B6</a></dt>
<dd><p>Specify text to display on the UIObject</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>text</strong> (<em>string</em>) =E2=80=93 text=
 to display</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Raises:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">TypeError</span></code></td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">roomMode</span><span class=3D"o">.</span><spa=
n class=3D"n">SetText</span><span class=3D"p">(</span><span class=3D"s1">'C=
ombined'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Button.SetVisible">
<code class=3D"descname">SetVisible</code><span class=3D"sig-paren">(</span=
><em>visible</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" =
href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Button.SetVisible" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Change the visibility of a UI control object.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>visible</strong> (<em>bool</em>) =E2=80=93 <co=
de class=3D"docutils literal notranslate"><span class=3D"pre">True</span></=
code> to make the object visible or <code class=3D"docutils literal notrans=
late"><span class=3D"pre">False</span></code> to
hide it.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.BlinkState">
<code class=3D"descname">BlinkState</code><a class=3D"headerlink" href=3D"h=
ttp://127.0.0.1:8080/ui.html#extronlib.ui.Button.BlinkState" title=3D"Perma=
link to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current blink state (<code class=3D"docutils literal =
notranslate"><span class=3D"pre">'Not</span> <span class=3D"pre">blinking'<=
/span></code> or
<code class=3D"docutils literal notranslate"><span class=3D"pre">'Blinking'=
</span></code>)</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Enabled">
<code class=3D"descname">Enabled</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Button.Enabled" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> if the control object is enabled else <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">False</span></code>=
</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Held">
<code class=3D"descname">Held</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Button.Held" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Get/Set the callback when hold expire event is triggered<=
/p>
<p>The callback function must accept exactly two parameters, which are
the <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Button" title=3D"extronlib.ui.Button"><code class=3D"xref py py=
-class docutils literal notranslate"><span class=3D"pre">Button</span></cod=
e></a> that triggers the event and the state
(e.g. =E2=80=98Held=E2=80=99).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">showSetupPage</span><span class=3D"p">,</span> <span class=3D"=
s1">'Held'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">ShowSetupPage</span><span c=
lass=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span=
> <span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">ShowPage</span><span class=3D"p">(</span><span class=3D"s1">'Setup P=
age'</span><span class=3D"p">)</span>
    <span class=3D"n">currentVolume</span> <span class=3D"o">=3D</span> <sp=
an class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=3D"n">=
GetVolume</span><span class=3D"p">(</span><span class=3D"s1">'HDMI'</span><=
span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Host">
<code class=3D"descname">Host</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Button.Host" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">UIDevice object that hosts this control object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body"><a class=3D"reference internal" href=3D"http://127.0=
.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.device"><=
code class=3D"xref py py-mod docutils literal notranslate"><span class=3D"p=
re">extronlib.device</span></code></a></td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.ID">
<code class=3D"descname">ID</code><a class=3D"headerlink" href=3D"http://12=
7.0.0.1:8080/ui.html#extronlib.ui.Button.ID" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object ID</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Name">
<code class=3D"descname">Name</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Button.Name" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object Name</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Pressed">
<code class=3D"descname">Pressed</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Button.Pressed" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Get/Set the callback when the button is pressed</p>
<p>The callback function must accept exactly two parameters, which are
the <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Button" title=3D"extronlib.ui.Button"><code class=3D"xref py py=
-class docutils literal notranslate"><span class=3D"pre">Button</span></cod=
e></a> that triggers the event and the state
(e.g. =E2=80=98Pressed=E2=80=99).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">powerOn</span><span class=3D"p">,</span> <span class=3D"s1">'P=
ressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">PowerOn</span><span class=
=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <s=
pan class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">powerOn</span><span class=3D"o">.</span><span class=
=3D"n">SetBlinking</span><span class=3D"p">(</span><span class=3D"s1">'Medi=
um'</span><span class=3D"p">,</span> <span class=3D"p">[</span><span class=
=3D"mi">2</span><span class=3D"p">,</span> <span class=3D"mi">4</span><span=
 class=3D"p">])</span>
    <span class=3D"n">mainProjector</span><span class=3D"o">.</span><span c=
lass=3D"n">Send</span><span class=3D"p">(</span><span class=3D"s1">'POWER O=
N'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.PressedState">
<code class=3D"descname">PressedState</code><a class=3D"headerlink" href=3D=
"http://127.0.0.1:8080/ui.html#extronlib.ui.Button.PressedState" title=3D"P=
ermalink to this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">True if the button is pressed, else False</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Released">
<code class=3D"descname">Released</code><a class=3D"headerlink" href=3D"htt=
p://127.0.0.1:8080/ui.html#extronlib.ui.Button.Released" title=3D"Permalink=
 to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Get/Set the callback when the button is released</p>
<p>The callback function must accept exactly two parameters, which are
the <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Button" title=3D"extronlib.ui.Button"><code class=3D"xref py py=
-class docutils literal notranslate"><span class=3D"pre">Button</span></cod=
e></a> that triggers the event and the state
(e.g. =E2=80=98Held=E2=80=99).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">closeSetupPage</span><span class=3D"p">,</span> <span class=3D=
"s1">'Released'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">ClosePage</span><span class=
=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <s=
pan class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PodiumTLP</span><span class=3D"o">.</span><span class=
=3D"n">ShowPage</span><span class=3D"p">(</span><span class=3D"s1">'Main'</=
span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Repeated">
<code class=3D"descname">Repeated</code><a class=3D"headerlink" href=3D"htt=
p://127.0.0.1:8080/ui.html#extronlib.ui.Button.Repeated" title=3D"Permalink=
 to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Get/Set the callback when repeat event is triggered</p>
<p>The callback function must accept exactly two parameters, which are
the <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Button" title=3D"extronlib.ui.Button"><code class=3D"xref py py=
-class docutils literal notranslate"><span class=3D"pre">Button</span></cod=
e></a> that triggers the event and the state
(e.g. =E2=80=98Repeated=E2=80=99).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">volumeUp</span><span class=3D"p">,</span> <span class=3D"s1">'=
Repeated'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">VolUp</span><span class=3D"=
p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <span =
class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">global</span> <span class=3D"n">VolLevel</span>
    <span class=3D"k">if</span> <span class=3D"n">VolLevel</span> <span cla=
ss=3D"o">&lt;</span> <span class=3D"mi">20</span><span class=3D"p">:</span>
        <span class=3D"n">VolLevel</span> <span class=3D"o">+=3D</span> <sp=
an class=3D"mi">1</span>
        <span class=3D"n">mainProjector</span><span class=3D"o">.</span><sp=
an class=3D"n">Send</span><span class=3D"p">(</span><span class=3D"s1">'VOL=
UME {}'</span><span class=3D"o">.</span><span class=3D"n">format</span><spa=
n class=3D"p">(</span><span class=3D"n">VolLevel</span><span class=3D"p">))=
</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.State">
<code class=3D"descname">State</code><a class=3D"headerlink" href=3D"http:/=
/127.0.0.1:8080/ui.html#extronlib.ui.Button.State" title=3D"Permalink to th=
is definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current visual state number</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">It does not return the current state if the button is
blinking.</p>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Tapped">
<code class=3D"descname">Tapped</code><a class=3D"headerlink" href=3D"http:=
//127.0.0.1:8080/ui.html#extronlib.ui.Button.Tapped" title=3D"Permalink to =
this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Get/Set the callback when tap event is triggered</p>
<p>The callback function must accept exactly two parameters, which are
the <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Button" title=3D"extronlib.ui.Button"><code class=3D"xref py py=
-class docutils literal notranslate"><span class=3D"pre">Button</span></cod=
e></a> that triggers the event and the state
(e.g. =E2=80=98Tapped=E2=80=99).</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">zoomIn</span><span class=3D"p">,</span> <span class=3D"s1">'Ta=
pped'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">ZoomInTapped</span><span cl=
ass=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span>=
 <span class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"n">PTZ</span><span class=3D"o">.</span><span class=3D"n"=
>Send</span><span class=3D"p">(</span><span class=3D"s1">'zoom +1'</span><s=
pan class=3D"p">)</span>   <span class=3D"c1"># Nudge the zoom</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Button.Visible">
<code class=3D"descname">Visible</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Button.Visible" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> if the control object is visible else <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">False</span></code>=
</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class=3D"section" id=3D"knob-class">
<h2><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Knob" title=3D"extronlib.ui.Knob"><code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">Knob</span></code></a>=
 Class<a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#knob-cl=
ass" title=3D"Permalink to this headline">=C2=B6</a></h2>
<dl class=3D"class">
<dt id=3D"extronlib.ui.Knob">
<em class=3D"property">class </em><code class=3D"descname">Knob</code><span=
 class=3D"sig-paren">(</span><em>UIHost</em>, <em>ID</em><span class=3D"sig=
-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.ht=
ml#extronlib.ui.Knob" title=3D"Permalink to this definition">=C2=B6</a></dt=
>
<dd><p>Knob is a rotary control that has 36 steps for a full revolution</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>UIHost</strong> (<a class=3D"reference internal" href=3D"http:/=
/127.0.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.dev=
ice"><code class=3D"xref py py-mod docutils literal notranslate"><span clas=
s=3D"pre">extronlib.device</span></code></a>) =E2=80=93 Device object hosti=
ng this UIObject</li>
<li><strong>ID</strong> (<em>int</em>) =E2=80=93 ID of the UIObject</li>
</ul>
</td>
</tr>
</tbody>
</table>
<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Knob.Host">
<code class=3D"descname">Host</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Knob.Host" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">UIDevice object that hosts this control object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body"><a class=3D"reference internal" href=3D"http://127.0=
.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.device"><=
code class=3D"xref py py-mod docutils literal notranslate"><span class=3D"p=
re">extronlib.device</span></code></a></td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Knob.ID">
<code class=3D"descname">ID</code><a class=3D"headerlink" href=3D"http://12=
7.0.0.1:8080/ui.html#extronlib.ui.Knob.ID" title=3D"Permalink to this defin=
ition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object ID</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Knob.Turned">
<code class=3D"descname">Turned</code><a class=3D"headerlink" href=3D"http:=
//127.0.0.1:8080/ui.html#extronlib.ui.Knob.Turned" title=3D"Permalink to th=
is definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Get/Set callback when knob is turned</p>
<p>The callback takes two parameters. The first one is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extro=
nlib.ui.Knob" title=3D"extronlib.ui.Knob"><code class=3D"xref py py-class d=
ocutils literal notranslate"><span class=3D"pre">Knob</span></code></a> its=
elf and the second one is a signed integer
indicating steps that was turned. Positive values indicate clockwise
rotation.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">mainKnob</span><span class=3D"p">,</span> <span class=3D"s1">'=
Turned'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">handleMainKnob</span><span =
class=3D"p">(</span><span class=3D"n">knob</span><span class=3D"p">,</span>=
 <span class=3D"n">direction</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">direction</span> <span cl=
ass=3D"o">&gt;</span> <span class=3D"mi">0</span><span class=3D"p">:</span>
        <span class=3D"k">for</span> <span class=3D"n">i</span> <span class=
=3D"ow">in</span> <span class=3D"nb">range</span><span class=3D"p">(</span>=
<span class=3D"n">direction</span><span class=3D"p">):</span>
            <span class=3D"n">mainProjector</span><span class=3D"o">.</span=
><span class=3D"n">Send</span><span class=3D"p">(</span><span class=3D"s1">=
'VOLUME UP'</span><span class=3D"p">)</span>
    <span class=3D"k">else</span><span class=3D"p">:</span>
        <span class=3D"k">for</span> <span class=3D"n">i</span> <span class=
=3D"ow">in</span> <span class=3D"nb">range</span><span class=3D"p">(</span>=
<span class=3D"n">direction</span><span class=3D"p">,</span> <span class=3D=
"mi">0</span><span class=3D"p">):</span>
            <span class=3D"n">mainProjector</span><span class=3D"o">.</span=
><span class=3D"n">Send</span><span class=3D"p">(</span><span class=3D"s1">=
'VOLUME DOWN'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

</dd></dl>

</div>
<div class=3D"section" id=3D"label-class">
<h2><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Label" title=3D"extronlib.ui.Label"><code class=3D"xref py py-c=
lass docutils literal notranslate"><span class=3D"pre">Label</span></code><=
/a> Class<a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#labe=
l-class" title=3D"Permalink to this headline">=C2=B6</a></h2>
<dl class=3D"class">
<dt id=3D"extronlib.ui.Label">
<em class=3D"property">class </em><code class=3D"descname">Label</code><spa=
n class=3D"sig-paren">(</span><em>UIHost</em>, <em>ID</em><span class=3D"si=
g-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.h=
tml#extronlib.ui.Label" title=3D"Permalink to this definition">=C2=B6</a></=
dt>
<dd><p>Label object displays text string on the screen</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>UIHost</strong> (<a class=3D"reference internal" href=3D"http:/=
/127.0.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.dev=
ice"><code class=3D"xref py py-mod docutils literal notranslate"><span clas=
s=3D"pre">extronlib.device</span></code></a>) =E2=80=93 Device object hosti=
ng this UIObject</li>
<li><strong>ID</strong> (<em>int</em><em>, </em><em>string</em>) =E2=80=93 =
ID or Name of the UIObject</li>
</ul>
</td>
</tr>
</tbody>
</table>
<dl class=3D"method">
<dt id=3D"extronlib.ui.Label.SetText">
<code class=3D"descname">SetText</code><span class=3D"sig-paren">(</span><e=
m>text</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Label.SetText" title=3D"Perm=
alink to this definition">=C2=B6</a></dt>
<dd><p>Specify text to display on the UIObject</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>text</strong> (<em>string</em>) =E2=80=93 text=
 to display</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Raises:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">TypeError</span></code></td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">roomMode</span><span class=3D"o">.</span><spa=
n class=3D"n">SetText</span><span class=3D"p">(</span><span class=3D"s1">'C=
ombined'</span><span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Label.SetVisible">
<code class=3D"descname">SetVisible</code><span class=3D"sig-paren">(</span=
><em>visible</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" =
href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Label.SetVisible" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Change the visibility of a UI control object.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>visible</strong> (<em>bool</em>) =E2=80=93 <co=
de class=3D"docutils literal notranslate"><span class=3D"pre">True</span></=
code> to make the object visible or <code class=3D"docutils literal notrans=
late"><span class=3D"pre">False</span></code> to=20
hide it.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Label.Host">
<code class=3D"descname">Host</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Label.Host" title=3D"Permalink to this =
definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">UIDevice object that hosts this control object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body"><a class=3D"reference internal" href=3D"http://127.0=
.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.device"><=
code class=3D"xref py py-mod docutils literal notranslate"><span class=3D"p=
re">extronlib.device</span></code></a></td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Label.ID">
<code class=3D"descname">ID</code><a class=3D"headerlink" href=3D"http://12=
7.0.0.1:8080/ui.html#extronlib.ui.Label.ID" title=3D"Permalink to this defi=
nition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object ID</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Label.Name">
<code class=3D"descname">Name</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Label.Name" title=3D"Permalink to this =
definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object Name</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Label.Visible">
<code class=3D"descname">Visible</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Label.Visible" title=3D"Permalink to=
 this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> if the control object is visible else <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">False</span></code>=
</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class=3D"section" id=3D"level-class">
<h2><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Level" title=3D"extronlib.ui.Level"><code class=3D"xref py py-c=
lass docutils literal notranslate"><span class=3D"pre">Level</span></code><=
/a> Class<a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#leve=
l-class" title=3D"Permalink to this headline">=C2=B6</a></h2>
<dl class=3D"class">
<dt id=3D"extronlib.ui.Level">
<em class=3D"property">class </em><code class=3D"descname">Level</code><spa=
n class=3D"sig-paren">(</span><em>UIHost</em>, <em>ID</em><span class=3D"si=
g-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.h=
tml#extronlib.ui.Level" title=3D"Permalink to this definition">=C2=B6</a></=
dt>
<dd><p>This module defines interfaces of Level UI.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">ConfRoomLevel</span> <span class=3D"o">=3D</s=
pan> <span class=3D"n">Level</span><span class=3D"p">(</span><span class=3D=
"n">ConfRoomWall</span><span class=3D"p">,</span> <span class=3D"mi">1000</=
span><span class=3D"p">)</span>
</pre></div>
</div>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>UIHost</strong> (<a class=3D"reference internal" href=3D"http:/=
/127.0.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.dev=
ice"><code class=3D"xref py py-mod docutils literal notranslate"><span clas=
s=3D"pre">extronlib.device</span></code></a>) =E2=80=93 Device object hosti=
ng this UIObject</li>
<li><strong>ID</strong> (<em>int</em><em>, </em><em>string</em>) =E2=80=93 =
ID or Name of the UIObject</li>
</ul>
</td>
</tr>
</tbody>
</table>
<dl class=3D"method">
<dt id=3D"extronlib.ui.Level.Dec">
<code class=3D"descname">Dec</code><span class=3D"sig-paren">(</span><span =
class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0.=
1:8080/ui.html#extronlib.ui.Level.Dec" title=3D"Permalink to this definitio=
n">=C2=B6</a></dt>
<dd><p>Nudge the level down a step.</p>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Level.Inc">
<code class=3D"descname">Inc</code><span class=3D"sig-paren">(</span><span =
class=3D"sig-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0.=
1:8080/ui.html#extronlib.ui.Level.Inc" title=3D"Permalink to this definitio=
n">=C2=B6</a></dt>
<dd><p>Nudge the level up a step.</p>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Level.SetLevel">
<code class=3D"descname">SetLevel</code><span class=3D"sig-paren">(</span><=
em>Level</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Level.SetLevel" title=3D"Per=
malink to this definition">=C2=B6</a></dt>
<dd><p>Set the current level.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>Level</strong> (<em>int</em>) =E2=80=93 Discre=
te value of the level object</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><table class=3D"highlighttable"=
><tbody><tr><td class=3D"linenos"><div class=3D"linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20</pre></div></td><td class=3D"code"><div class=3D"highlight"><pre><span><=
/span><span class=3D"n">currentLevel</span> <span class=3D"o">=3D</span> <s=
pan class=3D"mi">0</span>
<span class=3D"n">Inc</span> <span class=3D"o">=3D</span> <span class=3D"n"=
>Button</span><span class=3D"p">(</span><span class=3D"n">ConfRoomWall</spa=
n><span class=3D"p">,</span> <span class=3D"s1">'Volume Up'</span><span cla=
ss=3D"p">,</span> <span class=3D"n">repeatTime</span><span class=3D"o">=3D.=
</span><span class=3D"mi">2</span><span class=3D"p">)</span>
<span class=3D"n">Dec</span> <span class=3D"o">=3D</span> <span class=3D"n"=
>Button</span><span class=3D"p">(</span><span class=3D"n">ConfRoomWall</spa=
n><span class=3D"p">,</span> <span class=3D"s1">'Volume Down'</span><span c=
lass=3D"p">,</span> <span class=3D"n">repeatTime</span><span class=3D"o">=
=3D.</span><span class=3D"mi">2</span><span class=3D"p">)</span>
<span class=3D"n">VolumeConfRoom</span> <span class=3D"o">=3D</span> <span =
class=3D"n">VolumeInterface</span><span class=3D"p">(</span><span class=3D"=
n">ConfRoom</span><span class=3D"p">,</span> <span class=3D"s1">'VOL1'</spa=
n><span class=3D"p">)</span>

<span class=3D"nd">@event</span><span class=3D"p">(</span><span class=3D"n"=
>Inc</span><span class=3D"p">,</span> <span class=3D"p">[</span><span class=
=3D"s1">'Pressed'</span><span class=3D"p">,</span> <span class=3D"s1">'Repe=
ated'</span><span class=3D"p">])</span>
<span class=3D"k">def</span> <span class=3D"nf">IncVolume</span><span class=
=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <s=
pan class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">global</span> <span class=3D"n">currentLevel</span>
    <span class=3D"k">if</span> <span class=3D"n">currentLevel</span> <span=
 class=3D"o">&lt;</span> <span class=3D"mi">100</span><span class=3D"p">:</=
span>
        <span class=3D"n">currentLevel</span> <span class=3D"o">+=3D</span>=
 <span class=3D"mi">1</span>
        <span class=3D"n">VolumeConfRoom</span><span class=3D"o">.</span><s=
pan class=3D"n">SetLevel</span><span class=3D"p">(</span><span class=3D"n">=
currentLevel</span><span class=3D"p">)</span>
        <span class=3D"n">ConfRoomLevel</span><span class=3D"o">.</span><sp=
an class=3D"n">SetLevel</span><span class=3D"p">(</span><span class=3D"n">c=
urrentLevel</span><span class=3D"p">)</span>

<span class=3D"nd">@event</span><span class=3D"p">(</span><span class=3D"n"=
>Dec</span><span class=3D"p">,</span> <span class=3D"p">[</span><span class=
=3D"s1">'Pressed'</span><span class=3D"p">,</span> <span class=3D"s1">'Repe=
ated'</span><span class=3D"p">])</span>
<span class=3D"k">def</span> <span class=3D"nf">DecVolume</span><span class=
=3D"p">(</span><span class=3D"n">button</span><span class=3D"p">,</span> <s=
pan class=3D"n">state</span><span class=3D"p">):</span>
    <span class=3D"k">global</span> <span class=3D"n">currentLevel</span>
    <span class=3D"k">if</span> <span class=3D"n">currentLevel</span> <span=
 class=3D"o">&gt;</span> <span class=3D"mi">0</span><span class=3D"p">:</sp=
an>
        <span class=3D"n">currentLevel</span> <span class=3D"o">-=3D</span>=
 <span class=3D"mi">1</span>
        <span class=3D"n">VolumeConfRoom</span><span class=3D"o">.</span><s=
pan class=3D"n">SetLevel</span><span class=3D"p">(</span><span class=3D"n">=
currentLevel</span><span class=3D"p">)</span>
        <span class=3D"n">ConfRoomLevel</span><span class=3D"o">.</span><sp=
an class=3D"n">SetLevel</span><span class=3D"p">(</span><span class=3D"n">c=
urrentLevel</span><span class=3D"p">)</span>
</pre></div>
</td></tr></tbody></table></div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Level.SetRange">
<code class=3D"descname">SetRange</code><span class=3D"sig-paren">(</span><=
em>Min</em>, <em>Max</em>, <em>Step=3D1</em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#extronlib.=
ui.Level.SetRange" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set level object=E2=80=99s allowed range and the step size.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>Min</strong> (<em>int</em>) =E2=80=93 Minimum level</li>
<li><strong>Max</strong> (<em>int</em>) =E2=80=93 Maximum level</li>
<li><strong>Step</strong> (<em>int</em>) =E2=80=93 Optional step size for <=
a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extron=
lib.ui.Level.Inc" title=3D"extronlib.ui.Level.Inc"><code class=3D"xref py p=
y-meth docutils literal notranslate"><span class=3D"pre">Inc()</span></code=
></a> and <a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.=
html#extronlib.ui.Level.Dec" title=3D"extronlib.ui.Level.Dec"><code class=
=3D"xref py py-meth docutils literal notranslate"><span class=3D"pre">Dec()=
</span></code></a>.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<ul class=3D"last simple">
<li>The default range is 0 - 100 with a step size of 1.</li>
<li>For multi-state levels, you must set the level range to match
the number of states in the level.</li>
</ul>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">ConfRoomLevel</span><span class=3D"o">.</span=
><span class=3D"n">SetRange</span><span class=3D"p">(</span><span class=3D"=
o">-</span><span class=3D"mi">60</span><span class=3D"p">,</span> <span cla=
ss=3D"mi">10</span><span class=3D"p">,</span> <span class=3D"mi">5</span><s=
pan class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Level.SetVisible">
<code class=3D"descname">SetVisible</code><span class=3D"sig-paren">(</span=
><em>visible</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" =
href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Level.SetVisible" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Change the visibility of a UI control object.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>visible</strong> (<em>bool</em>) =E2=80=93 <co=
de class=3D"docutils literal notranslate"><span class=3D"pre">True</span></=
code> to make the object visible or <code class=3D"docutils literal notrans=
late"><span class=3D"pre">False</span></code> to
hide it.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Level.Host">
<code class=3D"descname">Host</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Level.Host" title=3D"Permalink to this =
definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">UIDevice object that hosts this control object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body"><a class=3D"reference internal" href=3D"http://127.0=
.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.device"><=
code class=3D"xref py py-mod docutils literal notranslate"><span class=3D"p=
re">extronlib.device</span></code></a></td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Level.ID">
<code class=3D"descname">ID</code><a class=3D"headerlink" href=3D"http://12=
7.0.0.1:8080/ui.html#extronlib.ui.Level.ID" title=3D"Permalink to this defi=
nition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object ID</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Level.Level">
<code class=3D"descname">Level</code><a class=3D"headerlink" href=3D"http:/=
/127.0.0.1:8080/ui.html#extronlib.ui.Level.Level" title=3D"Permalink to thi=
s definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current level</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Level.Max">
<code class=3D"descname">Max</code><a class=3D"headerlink" href=3D"http://1=
27.0.0.1:8080/ui.html#extronlib.ui.Level.Max" title=3D"Permalink to this de=
finition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the upper bound of the level object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Level.Min">
<code class=3D"descname">Min</code><a class=3D"headerlink" href=3D"http://1=
27.0.0.1:8080/ui.html#extronlib.ui.Level.Min" title=3D"Permalink to this de=
finition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the lower bound of the level object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Level.Name">
<code class=3D"descname">Name</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Level.Name" title=3D"Permalink to this =
definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object Name</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Level.Visible">
<code class=3D"descname">Visible</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Level.Visible" title=3D"Permalink to=
 this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> if the control object is visible else <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">False</span></code>=
</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
<div class=3D"section" id=3D"slider-class">
<h2><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#e=
xtronlib.ui.Slider" title=3D"extronlib.ui.Slider"><code class=3D"xref py py=
-class docutils literal notranslate"><span class=3D"pre">Slider</span></cod=
e></a> Class<a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#s=
lider-class" title=3D"Permalink to this headline">=C2=B6</a></h2>
<dl class=3D"class">
<dt id=3D"extronlib.ui.Slider">
<em class=3D"property">class </em><code class=3D"descname">Slider</code><sp=
an class=3D"sig-paren">(</span><em>UIHost</em>, <em>ID</em><span class=3D"s=
ig-paren">)</span><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.=
html#extronlib.ui.Slider" title=3D"Permalink to this definition">=C2=B6</a>=
</dt>
<dd><p>This module defines interfaces of Slider UI.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified">New in version 3.3.</span></p>
</div>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>UIHost</strong> (<a class=3D"reference internal" href=3D"http:/=
/127.0.0.1:8080/device.html#extronlib.device.UIDevice" title=3D"extronlib.d=
evice.UIDevice"><code class=3D"xref py py-class docutils literal notranslat=
e"><span class=3D"pre">UIDevice</span></code></a>) =E2=80=93 Device object =
hosting this UIObject</li>
<li><strong>ID</strong> (<em>int</em><em>, </em><em>string</em>) =E2=80=93 =
ID or Name of the UIObject</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">ProgramAudio</span> <span class=3D"o">=3D</sp=
an> <span class=3D"n">Slider</span><span class=3D"p">(</span><span class=3D=
"n">PodiumTLP</span><span class=3D"p">,</span> <span class=3D"s1">'Program =
Audio'</span><span class=3D"p">)</span>
</pre></div>
</div>
<dl class=3D"method">
<dt id=3D"extronlib.ui.Slider.SetEnable">
<code class=3D"descname">SetEnable</code><span class=3D"sig-paren">(</span>=
<em>enable</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" hr=
ef=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Slider.SetEnable" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Enable or disable a UI control object.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>enable</strong> (<em>bool</em>) =E2=80=93 <cod=
e class=3D"docutils literal notranslate"><span class=3D"pre">True</span></c=
ode> to enable the object or <code class=3D"docutils literal notranslate"><=
span class=3D"pre">False</span></code> to disable
it.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Slider.SetFill">
<code class=3D"descname">SetFill</code><span class=3D"sig-paren">(</span><e=
m>Fill</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" href=
=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Slider.SetFill" title=3D"Per=
malink to this definition">=C2=B6</a></dt>
<dd><p>Set the current fill level.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>Fill</strong> (<em>int</em><em>, </em><em>floa=
t</em>) =E2=80=93 Discrete value of the slider fill object</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">The default range is 0 - 100 with a step size of 1.</p>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">ProgramAudio</span> <span class=3D"o">=3D</sp=
an> <span class=3D"n">Slider</span><span class=3D"p">(</span><span class=3D=
"n">ConfRoom</span><span class=3D"p">,</span> <span class=3D"mi">10000</spa=
n><span class=3D"p">)</span>
<span class=3D"n">ProgramAudio</span><span class=3D"o">.</span><span class=
=3D"n">SetFill</span><span class=3D"p">(</span><span class=3D"mi">50</span>=
<span class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Slider.SetRange">
<code class=3D"descname">SetRange</code><span class=3D"sig-paren">(</span><=
em>Min</em>, <em>Max</em>, <em>Step=3D1</em><span class=3D"sig-paren">)</sp=
an><a class=3D"headerlink" href=3D"http://127.0.0.1:8080/ui.html#extronlib.=
ui.Slider.SetRange" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Set slider object=E2=80=99s allowed range and the step size.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><ul class=3D"first last simple">
<li><strong>Min</strong> (<em>int</em><em>, </em><em>float</em>) =E2=80=93 =
Minimum level</li>
<li><strong>Max</strong> (<em>int</em><em>, </em><em>float</em>) =E2=80=93 =
Maximum level</li>
<li><strong>Step</strong> (<em>int</em><em>, </em><em>float</em>) =E2=80=93=
 Optional step size.</li>
</ul>
</td>
</tr>
</tbody>
</table>
<div class=3D"admonition note">
<p class=3D"first admonition-title">Note</p>
<p class=3D"last">The default range is 0 - 100 with a step size of 1.</p>
</div>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"n">ConfRoomLevel</span><span class=3D"o">.</span=
><span class=3D"n">SetRange</span><span class=3D"p">(</span><span class=3D"=
o">-</span><span class=3D"mi">60</span><span class=3D"p">,</span> <span cla=
ss=3D"mi">10</span><span class=3D"p">,</span> <span class=3D"mi">5</span><s=
pan class=3D"p">)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"method">
<dt id=3D"extronlib.ui.Slider.SetVisible">
<code class=3D"descname">SetVisible</code><span class=3D"sig-paren">(</span=
><em>visible</em><span class=3D"sig-paren">)</span><a class=3D"headerlink" =
href=3D"http://127.0.0.1:8080/ui.html#extronlib.ui.Slider.SetVisible" title=
=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Change the visibility of a UI control object.</p>
<table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Parameters:</th><td =
class=3D"field-body"><strong>visible</strong> (<em>bool</em>) =E2=80=93 <co=
de class=3D"docutils literal notranslate"><span class=3D"pre">True</span></=
code> to make the object visible or <code class=3D"docutils literal notrans=
late"><span class=3D"pre">False</span></code> to
hide it.</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Changed">
<code class=3D"descname">Changed</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Slider.Changed" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the slider value is changed by user
interaction (i.e. after <a class=3D"reference internal" href=3D"http://127.=
0.0.1:8080/ui.html#extronlib.ui.Slider.Pressed" title=3D"extronlib.ui.Slide=
r.Pressed"><code class=3D"xref py py-attr docutils literal notranslate"><sp=
an class=3D"pre">Pressed</span></code></a> but before=20
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extro=
nlib.ui.Slider.Released" title=3D"extronlib.ui.Slider.Released"><code class=
=3D"xref py py-attr docutils literal notranslate"><span class=3D"pre">Relea=
sed</span></code></a>).</p>
<p>The callback takes three arguments. The first is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extro=
nlib.ui.Slider" title=3D"extronlib.ui.Slider"><code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">Slider</span></code></=
a> instance triggering the event, the second is
the state, and the third is the new slider value.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ProgramAudio</span><span class=3D"p">,</span> <span class=3D"s=
1">'Changed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">handleProgramAudio</span><s=
pan class=3D"p">(</span><span class=3D"n">slider</span><span class=3D"p">,<=
/span> <span class=3D"n">state</span><span class=3D"p">,</span> <span class=
=3D"n">value</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">state</span> <span class=
=3D"o">=3D=3D</span> <span class=3D"s1">'Changed'</span><span class=3D"p">:=
</span>
        <span class=3D"c1"># Send new program audio level</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Enabled">
<code class=3D"descname">Enabled</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Slider.Enabled" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> if the control object is enabled else <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">False</span></code>=
</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Fill">
<code class=3D"descname">Fill</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Slider.Fill" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the current fill level</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int, float</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Host">
<code class=3D"descname">Host</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Slider.Host" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">UIDevice object that hosts this control object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body"><a class=3D"reference internal" href=3D"http://127.0=
.0.1:8080/device.html#module-extronlib.device" title=3D"extronlib.device"><=
code class=3D"xref py py-mod docutils literal notranslate"><span class=3D"p=
re">extronlib.device</span></code></a></td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.ID">
<code class=3D"descname">ID</code><a class=3D"headerlink" href=3D"http://12=
7.0.0.1:8080/ui.html#extronlib.ui.Slider.ID" title=3D"Permalink to this def=
inition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object ID</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Max">
<code class=3D"descname">Max</code><a class=3D"headerlink" href=3D"http://1=
27.0.0.1:8080/ui.html#extronlib.ui.Slider.Max" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the upper bound of the slider object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int, float</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Min">
<code class=3D"descname">Min</code><a class=3D"headerlink" href=3D"http://1=
27.0.0.1:8080/ui.html#extronlib.ui.Slider.Min" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the lower bound of the slider object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int, float</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Name">
<code class=3D"descname">Name</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Slider.Name" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the object Name</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">string</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Pressed">
<code class=3D"descname">Pressed</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Slider.Pressed" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the slider is pressed.</p>
<p>The callback takes three arguments. The first is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extro=
nlib.ui.Slider" title=3D"extronlib.ui.Slider"><code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">Slider</span></code></=
a> instance triggering the event, the second is
the state, and the third is the new slider value.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ProgramAudio</span><span class=3D"p">,</span> <span class=3D"s=
1">'Pressed'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">handleProgramAudio</span><s=
pan class=3D"p">(</span><span class=3D"n">slider</span><span class=3D"p">,<=
/span> <span class=3D"n">state</span><span class=3D"p">,</span> <span class=
=3D"n">value</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">state</span> <span class=
=3D"o">=3D=3D</span> <span class=3D"s1">'Pressed'</span><span class=3D"p">:=
</span>
        <span class=3D"c1"># Send new program audio level</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Released">
<code class=3D"descname">Released</code><a class=3D"headerlink" href=3D"htt=
p://127.0.0.1:8080/ui.html#extronlib.ui.Slider.Released" title=3D"Permalink=
 to this definition">=C2=B6</a></dt>
<dd><p><code class=3D"docutils literal notranslate"><span class=3D"pre">Eve=
nt:</span></code> Triggers when the slider is released.</p>
<p>The callback takes three arguments. The first is the
<a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#extro=
nlib.ui.Slider" title=3D"extronlib.ui.Slider"><code class=3D"xref py py-cla=
ss docutils literal notranslate"><span class=3D"pre">Slider</span></code></=
a> instance triggering the event, the second is
the state, and the third is the new slider value.</p>
<div class=3D"highlight-python notranslate"><div class=3D"highlight"><pre><=
span></span><span class=3D"nd">@event</span><span class=3D"p">(</span><span=
 class=3D"n">ProgramAudio</span><span class=3D"p">,</span> <span class=3D"s=
1">'Released'</span><span class=3D"p">)</span>
<span class=3D"k">def</span> <span class=3D"nf">handleProgramAudio</span><s=
pan class=3D"p">(</span><span class=3D"n">slider</span><span class=3D"p">,<=
/span> <span class=3D"n">state</span><span class=3D"p">,</span> <span class=
=3D"n">value</span><span class=3D"p">):</span>
    <span class=3D"k">if</span> <span class=3D"n">state</span> <span class=
=3D"o">=3D=3D</span> <span class=3D"s1">'Released'</span><span class=3D"p">=
:</span>
        <span class=3D"c1"># Send new program audio level</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Step">
<code class=3D"descname">Step</code><a class=3D"headerlink" href=3D"http://=
127.0.0.1:8080/ui.html#extronlib.ui.Slider.Step" title=3D"Permalink to this=
 definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body">the step size of the slider object</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">int, float</td>
</tr>
</tbody>
</table>
</dd></dl>

<dl class=3D"attribute">
<dt id=3D"extronlib.ui.Slider.Visible">
<code class=3D"descname">Visible</code><a class=3D"headerlink" href=3D"http=
://127.0.0.1:8080/ui.html#extronlib.ui.Slider.Visible" title=3D"Permalink t=
o this definition">=C2=B6</a></dt>
<dd><table class=3D"docutils field-list" frame=3D"void" rules=3D"none">
<colgroup><col class=3D"field-name">
<col class=3D"field-body">
</colgroup><tbody valign=3D"top">
<tr class=3D"field-odd field"><th class=3D"field-name">Returns:</th><td cla=
ss=3D"field-body"><code class=3D"docutils literal notranslate"><span class=
=3D"pre">True</span></code> if the control object is visible else <code cla=
ss=3D"docutils literal notranslate"><span class=3D"pre">False</span></code>=
</td>
</tr>
<tr class=3D"field-even field"><th class=3D"field-name">Return type:</th><t=
d class=3D"field-body">bool</td>
</tr>
</tbody>
</table>
</dd></dl>

</dd></dl>

</div>
</div>


          </div>
        </div>
      </div>
      <div class=3D"sphinxsidebar" role=3D"navigation" aria-label=3D"main n=
avigation">
        <div class=3D"sphinxsidebarwrapper">
  <h3><a href=3D"http://127.0.0.1:8080/index.html">Table Of Contents</a></h=
3>
  <ul>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#"=
>ui Package</a><ul>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#b=
utton-class"><code class=3D"docutils literal notranslate"><span class=3D"pr=
e">Button</span></code> Class</a></li>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#k=
nob-class"><code class=3D"docutils literal notranslate"><span class=3D"pre"=
>Knob</span></code> Class</a></li>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#l=
abel-class"><code class=3D"docutils literal notranslate"><span class=3D"pre=
">Label</span></code> Class</a></li>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#l=
evel-class"><code class=3D"docutils literal notranslate"><span class=3D"pre=
">Level</span></code> Class</a></li>
<li><a class=3D"reference internal" href=3D"http://127.0.0.1:8080/ui.html#s=
lider-class"><code class=3D"docutils literal notranslate"><span class=3D"pr=
e">Slider</span></code> Class</a></li>
</ul>
</li>
</ul>

  <h4>Previous topic</h4>
  <p class=3D"topless"><a href=3D"http://127.0.0.1:8080/system.html" title=
=3D"previous chapter">system Package</a></p>
  <h4>Next topic</h4>
  <p class=3D"topless"><a href=3D"http://127.0.0.1:8080/decorators.html" ti=
tle=3D"next chapter">Decorators</a></p>
<div id=3D"searchbox" style=3D"" role=3D"search">
  <h3>Quick search</h3>
    <div class=3D"searchformwrapper">
    <form class=3D"search" action=3D"http://127.0.0.1:8080/search.html" met=
hod=3D"get">
      <input type=3D"text" name=3D"q">
      <input type=3D"submit" value=3D"Go">
     =20
     =20
    </form>
    </div>
</div>

        </div>
      </div>
      <div class=3D"clearer"></div>
    </div>
    <div class=3D"related" role=3D"navigation" aria-label=3D"related naviga=
tion">
      <h3>Navigation</h3>
      <ul>
        <li class=3D"right" style=3D"margin-right: 10px">
          <a href=3D"http://127.0.0.1:8080/genindex.html" title=3D"General =
Index">index</a></li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/py-modindex.html" title=3D"Pytho=
n Module Index">modules</a> |</li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/decorators.html" title=3D"Decora=
tors">next</a> |</li>
        <li class=3D"right">
          <a href=3D"http://127.0.0.1:8080/system.html" title=3D"system Pac=
kage">previous</a> |</li>
        <li class=3D"nav-item nav-item-0"><a href=3D"http://127.0.0.1:8080/=
index.html">Extron Library</a></li>
		<li><span class=3D"version_switcher_placeholder"><select><option value=3D=
"3.4" selected=3D"selected">3.4r7</option><option value=3D"3.3">3.3</option=
><option value=3D"3.2">3.2</option><option value=3D"3.1">3.1</option><optio=
n value=3D"2.9">2.9</option></select></span></li>
		<li><a href=3D"http://127.0.0.1:8080/ui.html#">Documentation</a> =C2=BB <=
/li>

          <li class=3D"nav-item nav-item-1"><a href=3D"http://127.0.0.1:808=
0/extronlib.html">extronlib Package</a> =C2=BB</li>=20
      </ul>
    </div>
    <div class=3D"footer" role=3D"contentinfo">
        =C2=A9 Copyright 2019, Extron (68-2906-01).
    </div>
  <!-- Code injected by live-server -->


</body></html>
------MultipartBoundary--J9ygG76yVD31BsO8Y4nZ6AHzhNV8TkgEH6xV9AKCv0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://127.0.0.1:8080/_static/classic.css

@charset "utf-8";

@import url("basic.css");

body { font-family: sans-serif; font-size: 100%; background-color: rgb(17, =
48, 61); color: rgb(0, 0, 0); margin: 0px; padding: 0px; }

div.document { background-color: rgb(28, 78, 99); }

div.documentwrapper { float: left; width: 100%; }

div.bodywrapper { margin: 0px 0px 0px 230px; }

div.body { background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); paddi=
ng: 0px 20px 30px; }

div.footer { color: rgb(255, 255, 255); width: 100%; padding: 9px 0px; text=
-align: center; font-size: 75%; }

div.footer a { color: rgb(255, 255, 255); text-decoration: underline; }

div.related { background-color: rgb(19, 63, 82); line-height: 30px; color: =
rgb(255, 255, 255); }

div.related a { color: rgb(255, 255, 255); }

div.sphinxsidebar { }

div.sphinxsidebar h3 { font-family: "Trebuchet MS", sans-serif; color: rgb(=
255, 255, 255); font-size: 1.4em; font-weight: normal; margin: 0px; padding=
: 0px; }

div.sphinxsidebar h3 a { color: rgb(255, 255, 255); }

div.sphinxsidebar h4 { font-family: "Trebuchet MS", sans-serif; color: rgb(=
255, 255, 255); font-size: 1.3em; font-weight: normal; margin: 5px 0px 0px;=
 padding: 0px; }

div.sphinxsidebar p { color: rgb(255, 255, 255); }

div.sphinxsidebar p.topless { margin: 5px 10px 10px; }

div.sphinxsidebar ul { margin: 10px; padding: 0px; color: rgb(255, 255, 255=
); }

div.sphinxsidebar a { color: rgb(152, 219, 204); }

div.sphinxsidebar input { border: 1px solid rgb(152, 219, 204); font-family=
: sans-serif; font-size: 1em; }

a { color: rgb(53, 95, 124); text-decoration: none; }

a:visited { color: rgb(53, 95, 124); text-decoration: none; }

a:hover { text-decoration: underline; }

div.body h1, div.body h2, div.body h3, div.body h4, div.body h5, div.body h=
6 { font-family: "Trebuchet MS", sans-serif; background-color: rgb(242, 242=
, 242); font-weight: normal; color: rgb(32, 67, 92); border-bottom: 1px sol=
id rgb(204, 204, 204); margin: 20px -20px 10px; padding: 3px 0px 3px 10px; =
}

div.body h1 { margin-top: 0px; font-size: 200%; }

div.body h2 { font-size: 160%; }

div.body h3 { font-size: 140%; }

div.body h4 { font-size: 120%; }

div.body h5 { font-size: 110%; }

div.body h6 { font-size: 100%; }

a.headerlink { color: rgb(198, 15, 15); font-size: 0.8em; padding: 0px 4px;=
 text-decoration: none; }

a.headerlink:hover { background-color: rgb(198, 15, 15); color: white; }

div.body p, div.body dd, div.body li, div.body blockquote { text-align: jus=
tify; line-height: 130%; }

div.admonition p.admonition-title + p { display: inline; }

div.admonition p { margin-bottom: 5px; }

div.admonition pre { margin-bottom: 5px; }

div.admonition ul, div.admonition ol { margin-bottom: 5px; }

div.note { background-color: rgb(238, 238, 238); border: 1px solid rgb(204,=
 204, 204); }

div.seealso { background-color: rgb(255, 255, 204); border: 1px solid rgb(2=
55, 255, 102); }

div.topic { background-color: rgb(238, 238, 238); }

div.warning { background-color: rgb(255, 228, 228); border: 1px solid rgb(2=
55, 102, 102); }

p.admonition-title { display: inline; }

p.admonition-title::after { content: ":"; }

pre { padding: 5px; background-color: rgb(238, 255, 204); color: rgb(51, 51=
, 51); line-height: 120%; border-top: 1px solid rgb(170, 204, 153); border-=
bottom: 1px solid rgb(170, 204, 153); border-image: initial; border-left: n=
one; border-right: none; }

code { background-color: rgb(236, 240, 243); padding: 0px 1px; font-size: 0=
.95em; }

th { background-color: rgb(238, 221, 238); }

.warning code { background: rgb(239, 194, 194); }

.note code { background: rgb(214, 214, 214); }

.viewcode-back { font-family: sans-serif; }

div.viewcode-block:target { background-color: rgb(244, 222, 191); border-to=
p: 1px solid rgb(170, 204, 153); border-bottom: 1px solid rgb(170, 204, 153=
); }

div.code-block-caption { color: rgb(239, 239, 239); background-color: rgb(2=
8, 78, 99); }
------MultipartBoundary--J9ygG76yVD31BsO8Y4nZ6AHzhNV8TkgEH6xV9AKCv0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://127.0.0.1:8080/_static/basic.css

@charset "utf-8";

div.clearer { clear: both; }

div.related { width: 100%; font-size: 90%; }

div.related h3 { display: none; }

div.related ul { margin: 0px; padding: 0px 0px 0px 10px; list-style: none; =
}

div.related li { display: inline; }

div.related li.right { float: right; margin-right: 5px; }

div.sphinxsidebarwrapper { padding: 10px 5px 0px 10px; }

div.sphinxsidebar { float: left; width: 230px; margin-left: -100%; font-siz=
e: 90%; overflow-wrap: break-word; }

div.sphinxsidebar ul { list-style: none; }

div.sphinxsidebar ul ul, div.sphinxsidebar ul.want-points { margin-left: 20=
px; list-style: square; }

div.sphinxsidebar ul ul { margin-top: 0px; margin-bottom: 0px; }

div.sphinxsidebar form { margin-top: 10px; }

div.sphinxsidebar input { border: 1px solid rgb(152, 219, 204); font-family=
: sans-serif; font-size: 1em; }

div.sphinxsidebar #searchbox input[type=3D"text"] { float: left; width: 80%=
; padding: 0.25em; box-sizing: border-box; }

div.sphinxsidebar #searchbox input[type=3D"submit"] { float: left; width: 2=
0%; border-left: none; padding: 0.25em; box-sizing: border-box; }

img { border: 0px; max-width: 100%; }

ul.search { margin: 10px 0px 0px 20px; padding: 0px; }

ul.search li { padding: 5px 0px 5px 20px; background-image: url("file.png")=
; background-repeat: no-repeat; background-position: 0px 7px; }

ul.search li a { font-weight: bold; }

ul.search li div.context { color: rgb(136, 136, 136); margin: 2px 0px 0px 3=
0px; text-align: left; }

ul.keywordmatches li.goodmatch a { font-weight: bold; }

table.contentstable { width: 90%; margin-left: auto; margin-right: auto; }

table.contentstable p.biglink { line-height: 150%; }

a.biglink { font-size: 1.3em; }

span.linkdescr { font-style: italic; padding-top: 5px; font-size: 90%; }

table.indextable { width: 100%; }

table.indextable td { text-align: left; vertical-align: top; }

table.indextable ul { margin-top: 0px; margin-bottom: 0px; list-style-type:=
 none; }

table.indextable > tbody > tr > td > ul { padding-left: 0em; }

table.indextable tr.pcap { height: 10px; }

table.indextable tr.cap { margin-top: 10px; background-color: rgb(242, 242,=
 242); }

img.toggler { margin-right: 3px; margin-top: 3px; cursor: pointer; }

div.modindex-jumpbox { border-top: 1px solid rgb(221, 221, 221); border-bot=
tom: 1px solid rgb(221, 221, 221); margin: 1em 0px; padding: 0.4em; }

div.genindex-jumpbox { border-top: 1px solid rgb(221, 221, 221); border-bot=
tom: 1px solid rgb(221, 221, 221); margin: 1em 0px; padding: 0.4em; }

table.modindextable td { padding: 2px; border-collapse: collapse; }

div.body { min-width: 450px; max-width: 800px; }

div.body p, div.body dd, div.body li, div.body blockquote { }

a.headerlink { visibility: hidden; }

h1:hover > a.headerlink, h2:hover > a.headerlink, h3:hover > a.headerlink, =
h4:hover > a.headerlink, h5:hover > a.headerlink, h6:hover > a.headerlink, =
dt:hover > a.headerlink, caption:hover > a.headerlink, p.caption:hover > a.=
headerlink, div.code-block-caption:hover > a.headerlink { visibility: visib=
le; }

div.body p.caption { text-align: inherit; }

div.body td { text-align: left; }

.first { margin-top: 0px !important; }

p.rubric { margin-top: 30px; font-weight: bold; }

img.align-left, .figure.align-left, object.align-left { clear: left; float:=
 left; margin-right: 1em; }

img.align-right, .figure.align-right, object.align-right { clear: right; fl=
oat: right; margin-left: 1em; }

img.align-center, .figure.align-center, object.align-center { display: bloc=
k; margin-left: auto; margin-right: auto; }

.align-left { text-align: left; }

.align-center { text-align: center; }

.align-right { text-align: right; }

div.sidebar { margin: 0px 0px 0.5em 1em; border: 1px solid rgb(221, 221, 18=
7); padding: 7px 7px 0px; background-color: rgb(255, 255, 238); width: 40%;=
 float: right; }

p.sidebar-title { font-weight: bold; }

div.topic { border: 1px solid rgb(204, 204, 204); padding: 7px 7px 0px; mar=
gin: 10px 0px; }

p.topic-title { font-size: 1.1em; font-weight: bold; margin-top: 10px; }

div.admonition { margin-top: 10px; margin-bottom: 10px; padding: 7px; }

div.admonition dt { font-weight: bold; }

div.admonition dl { margin-bottom: 0px; }

p.admonition-title { margin: 0px 10px 5px 0px; font-weight: bold; }

div.body p.centered { text-align: center; margin-top: 25px; }

table.docutils { border: 0px; border-collapse: collapse; }

table.align-center { margin-left: auto; margin-right: auto; }

table caption span.caption-number { font-style: italic; }

table caption span.caption-text { }

table.docutils td, table.docutils th { padding: 1px 8px 1px 5px; border-wid=
th: 0px 0px 1px; border-top-style: initial; border-top-color: initial; bord=
er-left-style: initial; border-left-color: initial; border-right-style: ini=
tial; border-right-color: initial; border-bottom-style: solid; border-botto=
m-color: rgb(170, 170, 170); }

table.footnote td, table.footnote th { border: 0px !important; }

th { text-align: left; padding-right: 5px; }

table.citation { border-left: 1px solid gray; margin-left: 1px; }

table.citation td { border-bottom: none; }

div.figure { margin: 0.5em; padding: 0.5em; }

div.figure p.caption { padding: 0.3em; }

div.figure p.caption span.caption-number { font-style: italic; }

div.figure p.caption span.caption-text { }

table.field-list td, table.field-list th { border: 0px !important; }

.field-list ul { margin: 0px; padding-left: 1em; }

.field-list p { margin: 0px; }

.field-name { hyphens: manual; }

ol.arabic { list-style: decimal; }

ol.loweralpha { list-style: lower-alpha; }

ol.upperalpha { list-style: upper-alpha; }

ol.lowerroman { list-style: lower-roman; }

ol.upperroman { list-style: upper-roman; }

dl { margin-bottom: 15px; }

dd p { margin-top: 0px; }

dd ul, dd table { margin-bottom: 10px; }

dd { margin-top: 3px; margin-bottom: 10px; margin-left: 30px; }

dt:target, span.highlighted { background-color: rgb(251, 229, 78); }

rect.highlighted { fill: rgb(251, 229, 78); }

dl.glossary dt { font-weight: bold; font-size: 1.1em; }

.optional { font-size: 1.3em; }

.sig-paren { font-size: larger; }

.versionmodified { font-style: italic; }

.system-message { background-color: rgb(255, 221, 170); padding: 5px; borde=
r: 3px solid red; }

.footnote:target { background-color: rgb(255, 255, 170); }

.line-block { display: block; margin-top: 1em; margin-bottom: 1em; }

.line-block .line-block { margin-top: 0px; margin-bottom: 0px; margin-left:=
 1.5em; }

.guilabel, .menuselection { font-family: sans-serif; }

.accelerator { text-decoration: underline; }

.classifier { font-style: oblique; }

abbr, acronym { border-bottom: 1px dotted; cursor: help; }

pre { overflow: auto hidden; }

span.pre { hyphens: none; }

td.linenos pre { padding: 5px 0px; border: 0px; background-color: transpare=
nt; color: rgb(170, 170, 170); }

table.highlighttable { margin-left: 0.5em; }

table.highlighttable td { padding: 0px 0.5em; }

div.code-block-caption { padding: 2px 5px; font-size: small; }

div.code-block-caption code { background-color: transparent; }

div.code-block-caption + div > div.highlight > pre { margin-top: 0px; }

div.code-block-caption span.caption-number { padding: 0.1em 0.3em; font-sty=
le: italic; }

div.code-block-caption span.caption-text { }

div.literal-block-wrapper { padding: 1em 1em 0px; }

div.literal-block-wrapper div.highlight { margin: 0px; }

code.descname { background-color: transparent; font-weight: bold; font-size=
: 1.2em; }

code.descclassname { background-color: transparent; }

code.xref, a code { background-color: transparent; font-weight: bold; }

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { background-color: tr=
ansparent; }

.viewcode-link { float: right; }

.viewcode-back { float: right; font-family: sans-serif; }

div.viewcode-block:target { margin: -1px -10px; padding: 0px 10px; }

img.math { vertical-align: middle; }

div.body div.math p { text-align: center; }

span.eqno { float: right; }

span.eqno a.headerlink { position: relative; left: 0px; z-index: 1; }

div.math:hover a.headerlink { visibility: visible; }

@media print {
  div.document, div.documentwrapper, div.bodywrapper { width: 100%; margin:=
 0px !important; }
  div.sphinxsidebar, div.related, div.footer, #top-link { display: none; }
}
------MultipartBoundary--J9ygG76yVD31BsO8Y4nZ6AHzhNV8TkgEH6xV9AKCv0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://127.0.0.1:8080/_static/pygments.css

@charset "utf-8";

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(238, 255, 204); }

.highlight .c { color: rgb(64, 128, 144); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cm { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cp { color: rgb(0, 112, 32); }

.highlight .cpf { color: rgb(64, 128, 144); font-style: italic; }

.highlight .c1 { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cs { color: rgb(64, 128, 144); background-color: rgb(255, 240, =
240); }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(51, 51, 51); }

.highlight .gp { color: rgb(198, 93, 9); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kd { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kn { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kp { color: rgb(0, 112, 32); }

.highlight .kr { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kt { color: rgb(144, 32, 0); }

.highlight .m { color: rgb(32, 128, 80); }

.highlight .s { color: rgb(64, 112, 160); }

.highlight .na { color: rgb(64, 112, 160); }

.highlight .nb { color: rgb(0, 112, 32); }

.highlight .nc { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .no { color: rgb(96, 173, 213); }

.highlight .nd { color: rgb(85, 85, 85); font-weight: bold; }

.highlight .ni { color: rgb(213, 85, 55); font-weight: bold; }

.highlight .ne { color: rgb(0, 112, 32); }

.highlight .nf { color: rgb(6, 40, 126); }

.highlight .nl { color: rgb(0, 32, 112); font-weight: bold; }

.highlight .nn { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .nt { color: rgb(6, 40, 115); font-weight: bold; }

.highlight .nv { color: rgb(187, 96, 213); }

.highlight .ow { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(32, 128, 80); }

.highlight .mf { color: rgb(32, 128, 80); }

.highlight .mh { color: rgb(32, 128, 80); }

.highlight .mi { color: rgb(32, 128, 80); }

.highlight .mo { color: rgb(32, 128, 80); }

.highlight .sa { color: rgb(64, 112, 160); }

.highlight .sb { color: rgb(64, 112, 160); }

.highlight .sc { color: rgb(64, 112, 160); }

.highlight .dl { color: rgb(64, 112, 160); }

.highlight .sd { color: rgb(64, 112, 160); font-style: italic; }

.highlight .s2 { color: rgb(64, 112, 160); }

.highlight .se { color: rgb(64, 112, 160); font-weight: bold; }

.highlight .sh { color: rgb(64, 112, 160); }

.highlight .si { color: rgb(112, 160, 208); font-style: italic; }

.highlight .sx { color: rgb(198, 93, 9); }

.highlight .sr { color: rgb(35, 83, 136); }

.highlight .s1 { color: rgb(64, 112, 160); }

.highlight .ss { color: rgb(81, 121, 24); }

.highlight .bp { color: rgb(0, 112, 32); }

.highlight .fm { color: rgb(6, 40, 126); }

.highlight .vc { color: rgb(187, 96, 213); }

.highlight .vg { color: rgb(187, 96, 213); }

.highlight .vi { color: rgb(187, 96, 213); }

.highlight .vm { color: rgb(187, 96, 213); }

.highlight .il { color: rgb(32, 128, 80); }
------MultipartBoundary--J9ygG76yVD31BsO8Y4nZ6AHzhNV8TkgEH6xV9AKCv0------
